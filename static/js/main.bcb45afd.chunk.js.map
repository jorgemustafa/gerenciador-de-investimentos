{"version":3,"sources":["assets/img/illustrations/404.svg","assets/img/technologies/react-hero-logo.svg","assets/img/technologies/react-logo-transparent.svg","routes.js","reducers/auth.js","reducers/index.js","actions/types.js","store.js","components/Charts.js","pages/sidebar/dashboard/AlocacaoChart.js","pages/sidebar/dashboard/PerformanceChart.js","pages/sidebar/dashboard/PerformanceNumbers.js","pages/sidebar/dashboard/DashboardOverview.js","pages/sidebar/transactions/Table.js","pages/sidebar/transactions/Transactions.js","components/ProfileModal.js","components/Forms.js","pages/Settings.js","actions/auth.js","pages/authentication/Signin.js","pages/authentication/Signup.js","pages/authentication/ResetPasswordConfirm.js","pages/authentication/ResetPassword.js","pages/authentication/NotFound.js","pages/authentication/Activate.js","pages/authentication/Google.js","pages/sidebar/Sidebar.js","components/Navbar.js","components/Footer.js","components/Preloader.js","pages/sidebar/addAssets/AddTransaction.js","pages/sidebar/addAssets/forms/AcaoFiiForm.js","pages/sidebar/addAssets/forms/AcaoAmForm.js","pages/sidebar/addAssets/forms/RendaFixaForm.js","pages/sidebar/addAssets/forms/TesouroDiretoForm.js","pages/sidebar/addAssets/forms/CriptomoedaForm.js","pages/sidebar/addAssets/forms/PropriedadeForm.js","pages/sidebar/addAssets/NewInvestment.js","pages/sidebar/addAssets/ReInvestment.js","pages/sidebar/addAssets/Sale.js","pages/sidebar/listAssets/TableAssets.js","pages/sidebar/listAssets/AssetsList.js","App.js","index.js","assets/img/illustrations/signin.svg"],"names":["module","exports","Routes","path","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","CircleChart","props","series","donutWidth","sum","a","b","options","low","high","donut","donutSolid","fullWidth","showLabel","labelInterpolationFnc","value","Math","round","reduce","plugins","ChartistTooltip","data","className","AlocacaoChart","useState","carteira","setCarteira","useEffect","fetch","headers","then","response","json","catch","err","console","log","assets","map","c","Card","border","Body","Row","Col","xs","xl","key","id","color","label","labels","showArea","axisX","position","showGrid","axisY","title","percentage","percentageIcon","faAngleDown","faAngleUp","percentageColor","Header","icon","PerformanceChart","PropTypes","desempenho","setDesempenho","percent","sm","PerformanceNumbers","dataResponse","setDataResponse","TableRow","nome","cotacao","unidades","saldo","inclusao","tipo_transacao","tipoVariant","parseFloat","toFixed","toUpperCase","Table","hover","d","Footer","length","genMsg","setGenMsg","dlMsg","setDlMsg","generateReport","method","status","downloadReport","blob","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","Date","toLocaleDateString","body","appendChild","click","parentNode","removeChild","Button","variant","size","onClick","EditName","firstName","setFirstName","message","setMessage","handleSubmit","e","preventDefault","JSON","stringify","res","setTimeout","location","reload","statusText","Fragment","Modal","as","Dialog","centered","show","onHide","close","Title","aria-label","Form","onSubmit","md","Group","Control","required","placeholder","onChange","target","EditLastName","lastName","setLastName","EditEmail","email","setEmail","GeneralInfoForm","userLogged","setUserLogged","first_name","last_name","openModalName","setOpenModalName","openModalLastName","setOpenModalLastName","openModalEmail","setOpenModalEmail","Label","readOnly","faPencilAlt","load_user","dispatch","config","axios","get","process","connect","login","password","post","formData","setFormData","name","continueWithGoogle","replace","authorization_url","to","Container","style","backgroundImage","BgImage","InputGroup","Text","faEnvelope","autoFocus","faUnlockAlt","minLength","Check","FormCheck","Input","htmlFor","Link","faGoogle","signup","re_password","accountCreated","setAccountCreated","faAngleLeft","faPen","reset_password_confirm","uid","token","new_password","re_new_password","match","requestSent","setRequestSent","params","reset_password","Image","src","NotFoundImage","faChevronLeft","verify","verified","setVerified","googleAuthenticate","code","details","formBody","Object","keys","encodeURIComponent","join","useLocation","values","queryString","parse","search","pathname","setShow","showClass","onCollapse","NavItem","external","image","badgeText","badgeBg","badgeColor","classNames","navItemClassName","linkProps","Nav","Item","width","height","Badge","pill","bg","text","Navbar","expand","collapseOnSelect","Brand","ReactHero","Toggle","aria-controls","CSSTransition","timeout","in","faSignOutAlt","faTimes","faChartPie","faHandHoldingUsd","faList","faPlus","faUserCircle","logout","redirect","setRedirect","totalCarteira","valor_total","fluid","Dropdown","Menu","currentYear","moment","lg","ReactLogo","asset","venda","nomeHide","setNome","setCotacao","dataOperacao","setDataOperacao","setUnidades","taxa","setTaxa","listaAtivos","setListaAtivos","data_operacao","date","Select","hidden","ativo","FormLabel","dateFormat","selected","defaultValue","decimalsLimit","prefix","replaceAll","emissor","setEmissor","valorInvestido","setValorInvestido","tipoAplicacao","setTipoAplicacao","rentabilidade","setRentabilidade","vencimento","setVencimento","liquidez","setLiquidez","dataStrf","valor_investido","tipo_aplicacao","FormSelect","produto","tipo","suffix","maxLength","detail","categoria","setCategoria","acoesFiiVisible","setAcoesFiiVisible","acoesAmVisible","setAcoesAmVisible","rendaFixaVisible","setRendaFixaVisible","tesouroVisible","setTesouroVisible","criptoVisible","setCriptoVisible","propVisible","setPropVisible","AcaoFiiForm","AcaoAmForm","RendaFixaForm","TesouroDiretoForm","CriptomoedaForm","PropriedadeForm","responseAtivos","setResponseAtivos","selectedAsset","setSelectedAsset","assetType","split","assetName","assetId","pm","units","total_current","invested","performance","perc_wallet","perfVariant","RouteWithLoader","Component","component","rest","loaded","setLoaded","timer","clearTimeout","render","Preloader","RouteWithSidebar","showSettings","setShowSettings","toggleSettings","Sidebar","from","App","exact","DashboardOverview","AssetsList","Settings","Transactions","AddTransaction","NewInvestment","Sale","ReInvestment","Signin","Signup","Activate","Google","ResetPasswordConfirm","ResetPassword","NotFoundPage","ReactDOM","getElementById"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,oD,yLCC9BC,EAEU,CAAEC,KAAM,KAFlBD,EAIG,CAACC,KAAM,WAJVD,EAMK,CAAEC,KAAM,iBANbD,EAQO,CAAEC,KAAM,cARfD,EASM,CAAEC,KAAM,gCATdD,EAUK,CAAEC,KAAM,6BAVbD,EAWH,CAAEC,KAAM,oBAXLD,EAaC,CAAEC,KAAM,kBAbTD,EAeD,CAAEC,KAAM,UAfPD,EAgBD,CAAEC,KAAM,cAhBPD,EAiBM,CAAEC,KAAM,kBAjBdD,EAkBa,CAAEC,KAAM,uCAlBrBD,EAmBC,CAAEC,KAAM,yBAnBTD,EAoBD,CAAEC,KAAM,WApBPD,EAsBC,CAAEC,KAAM,Q,0CCHhBC,EAAe,CACjBC,OAAQC,aAAaC,QAAQ,UAC7BC,QAASF,aAAaC,QAAQ,WAC9BE,gBAAiB,KACjBC,KAAM,MCrBKC,4BAAgB,CAC3BC,KDuBW,WAAwC,IAA/BC,EAA8B,uDAAtBT,EAAcU,EAAQ,uCAC1CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAOD,GACH,IEvB6B,wBFwBzB,OAAO,2BACAF,GADP,IAEIJ,iBAAiB,IAEzB,IEpCqB,gBFqCrB,IEvB2B,sBFyBvB,OADAH,aAAaW,QAAQ,SAAUD,EAAQX,QAChC,2BACAQ,GADP,IAEIJ,iBAAiB,EACjBJ,OAAQW,EAAQX,OAChBG,QAASQ,EAAQR,UAEzB,IE3CsB,iBF4ClB,OAAO,2BACAK,GADP,IAEIJ,iBAAiB,IAEzB,IE5C2B,sBF6CvB,OAAO,2BACAI,GADP,IAEIH,KAAMM,IAEd,IE9C0B,qBF+CtB,OAAO,2BACAH,GADP,IAEIJ,iBAAiB,IAEzB,IErDwB,mBFsDpB,OAAO,2BACAI,GADP,IAEIH,KAAM,OAEd,IElDwB,mBFmDxB,IEjEkB,aFkElB,IEhEmB,cFiEnB,IEpDc,SFuDV,OAFAJ,aAAaY,WAAW,UACxBZ,aAAaY,WAAW,WACjB,2BACAL,GADP,IAEIR,OAAQ,KACRG,QAAS,KACTC,iBAAiB,EACjBC,KAAM,OAEd,IEnE8B,yBFoE9B,IErE2B,sBFsE3B,IEnEsC,iCFoEtC,IErEmC,8BFsEnC,IE9E0B,qBF+E1B,IE9EuB,kBF+EnB,OAAO,eACAG,GAEX,QACI,OAAOA,MGjFbM,EAAa,CAACC,KAQLC,EANDC,6BACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,6DC0B9BO,EAAc,SAACC,GAC1B,MAAyCA,EAAjCC,cAAR,MAAiB,GAAjB,IAAyCD,EAApBE,WACfC,EAAM,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAEpBC,EAAU,CACdC,IAAK,EACLC,KAAM,EACNN,gBANF,MAAkC,GAAlC,EAOEO,OAAO,EACPC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,sBAAuB,SAAAC,GAAK,gBAAOC,KAAKC,MAAMF,EAAQb,EAAOgB,OAAOd,GAAO,KAA/C,OAGxBe,EAAU,CACdC,OAGF,OACE,kBAAC,IAAD,CAAUC,KAAM,CAAEnB,UAAUK,QAAO,2BAAMA,GAAN,IAAeY,YAAU9B,KAAK,MAAMiC,UAAU,uBCtDxEC,EAAgB,WAEzB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,mBAAoBF,QAI7C,IACH,IAAMG,EAASZ,EAASa,KAAI,SAAAC,GAAC,OAAIA,EAAEF,UAEnC,OACI,kBAACG,EAAA,EAAD,CAAMC,OAAO,QAAQnB,UAAU,aAC3B,kBAACkB,EAAA,EAAKE,KAAN,KACI,kBAACC,EAAA,EAAD,CAAKrB,UAAU,wCACX,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EACZxB,UAAU,mFACX,kBAAC,EAAD,CAAapB,OAAQmC,EAAO,MAEhC,kBAACO,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGxB,UAAU,WAC1B,wBAAIA,UAAU,QAAd,kBACCG,EAASa,KAAI,SAAAC,GAAC,OACX,oCACKA,EAAEF,OAAOC,KAAI,SAAAjC,GAAC,OACX,wBAAI0C,IAAG,yBAAoB1C,EAAE2C,IACzB1B,UAAS,yBAAoBjB,EAAE4C,QAC9B5C,EAAEU,MAFP,KAEgBV,EAAE6C,MAFlB,IAEyB,0C,uBCpC9C,aACb,IAqBM/B,EAAU,CACdC,OAGF,OACE,kBAAC,IAAD,CAAUC,KA1BC,CACX8B,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDjD,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAwBNK,QAAO,2BArBf,CACdC,IAAK,EACL4C,UAAU,EACVxC,WAAW,EACXyC,MAAO,CACLC,SAAU,MACVC,UAAU,GAEZC,MAAO,CAELD,UAAU,EACV1C,WAAW,EACXC,sBAAuB,SAAAC,GAAK,iBAAQA,EAAQ,EAAhB,SASD,IAAeI,YAAU9B,KAAK,OAAOiC,UAAU,kCCzBjE,WAACrB,GACd,IAAQwD,EAA6BxD,EAA7BwD,MAAO1C,EAAsBd,EAAtBc,MAAO2C,EAAezD,EAAfyD,WAChBC,EAAiBD,EAAa,EAAIE,IAAcC,IAChDC,EAAkBJ,EAAa,EAAI,cAAgB,eAEzD,OACE,kBAAClB,EAAA,EAAD,CAAMlB,UAAU,8BACd,kBAACkB,EAAA,EAAKuB,OAAN,CAAazC,UAAU,6CACrB,yBAAKA,UAAU,WACb,wBAAIA,UAAU,kBACXmC,GAEH,kCAAQ1C,GACR,2BAAOO,UAAU,gBACf,0BAAMA,UAAU,QAAhB,qBACA,kBAAC,IAAD,CAAiB0C,KAAML,EAAgBrC,UAAS,UAAKwC,EAAL,WAChD,0BAAMxC,UAAWwC,GACdJ,EADH,QAUN,kBAAClB,EAAA,EAAKE,KAAN,CAAWpB,UAAU,OACrB,kBAAC2C,EAAD,SCtB2BC,OAClB,iBAEX,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAEAzC,qBAAU,WAEFC,MAAM,2CAA4C,CAC9CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI+C,EAAc/C,MAC3BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,uBAAwBF,QAIjD,IAEH,IAAMnB,EAAQoD,EAAWpD,MAAQoD,EAAWpD,MAAQ,EAC9CsD,EAAUF,EAAWE,QAAUF,EAAWE,QAAU,EAE1D,OACI,kBAAC,WAAD,KACI,kBAAC1B,EAAA,EAAD,CAAKrB,UAAU,6BACX,kBAACsB,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,EAAGxB,GAAI,EAAGxB,UAAU,0BAChC,kBAACiD,EAAD,CACId,MAAM,aACN1C,MAAOA,EACP2C,WAAYW,KAGpB,kBAACzB,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,EAAGxB,GAAI,EAAGxB,UAAU,SAChC,kBAAC,EAAD,U,4CC3CL,cAEX,MAAwCE,mBAAS,IAAjD,mBAAOgD,EAAP,KAAqBC,EAArB,KAGA9C,qBAAU,WAGNC,MAAM,6CAA8C,CAChDC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIoD,EAAgBpD,MAC7BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,UAAWF,QAGhC,IAEH,IAAMwC,EAAW,SAACzE,GACd,IAAO0E,EAA4D1E,EAA5D0E,KAAMC,EAAsD3E,EAAtD2E,QAASC,EAA6C5E,EAA7C4E,SAAUC,EAAmC7E,EAAnC6E,MAAOC,EAA4B9E,EAA5B8E,SAAUC,EAAkB/E,EAAlB+E,eAC3CC,EAAiC,WAAnBD,EAA8B,UAAY,SAE9D,OACI,4BACI,4BACN,0BAAM1D,UAAU,aACbqD,IAGG,4BACN,0BAAMrD,UAAU,aACD,SAAZsD,EAAqB,yCAAKM,WAAWN,GAASO,QAAQ,IAAS,6CAG5D,4BACN,0BAAM7D,UAAU,aACbuD,IAGG,4BACN,0BAAMvD,UAAU,aAAhB,KACKwD,IAGC,4BACN,0BAAMxD,UAAU,aACbyD,IAGG,4BACN,0BAAMzD,UAAS,yBAAoB2D,IAChCD,EAAeI,kBAOxB,OACI,kBAAC5C,EAAA,EAAD,CAAMC,OAAO,QAAQnB,UAAU,4CAC3B,kBAACkB,EAAA,EAAKE,KAAN,CAAWpB,UAAU,QACjB,kBAAC+D,GAAA,EAAD,CAAOC,OAAK,EAAChE,UAAU,iCACnB,+BACA,4BACI,wBAAIA,UAAU,iBAAd,SACA,wBAAIA,UAAU,iBAAd,iBACA,wBAAIA,UAAU,iBAAd,YACA,wBAAIA,UAAU,iBAAd,SACA,wBAAIA,UAAU,iBAAd,eACA,wBAAIA,UAAU,iBAAd,UAGJ,+BACCkD,EAAalC,KAAI,SAAAiD,GAAC,OAAI,kBAACb,EAAD,eAAU3B,IAAG,eAAUwC,EAAEvC,KAAUuC,SAG9D,kBAAC/C,EAAA,EAAKgD,OAAN,CAAalE,UAAU,kEACnB,2BAAOA,UAAU,WAAjB,aACc,2BAAIkD,EAAaiB,QAD/B,mBC9EL,cACX,MAA4BjE,mBAAS,GAArC,mBAAOkE,EAAP,KAAeC,EAAf,KACA,EAA0BnE,mBAAS,GAAnC,mBAAOoE,EAAP,KAAcC,EAAd,KACIC,EAAc,uCAAG,sBAAAzF,EAAA,+EAEGuB,MAAM,yCAClB,CACImE,OAAQ,MACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,sBAPf,OAUM,MAVN,OAULmH,QACJL,EAAU,KACVE,EAAS,IAETF,EAAU,KAdD,gDAiBbA,EAAU,KAjBG,yDAAH,qDAoBdM,EAAc,uCAAG,sBAAA5F,EAAA,+EAEGuB,MAAM,uCAClB,CACImE,OAAQ,MACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,8BAGvBiD,MAAK,SAACC,GAAD,OAAcA,EAASmE,UAC5BpE,MAAK,SAACoE,GAEH,IAAMC,EAAMC,OAAOC,IAAIC,gBACnB,IAAIC,KAAK,CAACL,KAERM,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aACD,WADJ,6BAEyB,IAAIC,MAAOC,mBAAmB,SAFvD,UAKAL,SAASM,KAAKC,YAAYR,GAE1BA,EAAKS,QAELT,EAAKU,WAAWC,YAAYX,MA3BvB,OA6BM,MA7BN,OA6BLR,QACJH,EAAS,KACTF,EAAU,IAEVE,EAAS,KAjCA,gDAoCbA,EAAS,KApCI,yDAAH,qDAwClB,OACI,oCACI,yBAAKvE,UAAU,mFACX,yBAAKA,UAAU,wBACX,uCACA,uBAAGA,UAAU,QAAb,sEAIR,yBAAKA,UAAU,uBACX,kBAACqB,EAAA,EAAD,CAAKrB,UAAU,8CASX,kBAACsB,EAAA,EAAD,CAAKtB,UAAU,YACX,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,KAAK,KAAKC,QAASzB,GAArD,wBAKR,yBAAKxE,UAAU,2BAEI,MAAXoE,EACI,oCACI,uBAAGpE,UAAU,gBAAb,wDAEF,KAGI,MAAVsE,EACI,uBAAGtE,UAAU,gBAAb,qCACE,KAGK,MAAXoE,GAA4B,MAAVE,EACd,kBAACwB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKC,QAAStB,GAA7C,UACE,OAIlB,kBAAC,GAAD,Q,oBC7GCuB,GAAW,SAACvH,GAErB,MAAkCuB,mBAAS,IAA3C,mBAAOiG,EAAP,KAAkBC,EAAlB,KACA,EAA8BlG,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KAGIC,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,yCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBR,UAAWA,MAXZ,OAcQ,OAXfS,EAHO,QAcHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BAAb,+BACX6G,YAAW,WACH/B,OAAOgC,SAASC,WACjB,MAIPT,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aAtBlE,gDAyBXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAzB9D,yDAAH,sDA6BhB,OACI,kBAAC,IAAMY,SAAP,KACI,kBAACC,GAAA,EAAD,CAAOC,GAAID,KAAME,OAAQC,UAAQ,EAACC,KAAM3I,EAAM2I,KAAMC,OAAQ5I,EAAM6I,MAAO9F,GAAG,mBACxE,kBAACwF,GAAA,EAAMzE,OAAP,KACI,kBAACyE,GAAA,EAAMO,MAAP,CAAazH,UAAU,MAAvB,gBACA,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,QAAQ2B,aAAW,QAAQzB,QAAStH,EAAM6I,SAE9D,kBAACN,GAAA,EAAM9F,KAAP,KACI,kBAACuG,GAAA,EAAD,CAAMC,SAAUrB,GACZ,kBAAClF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aACX,kBAACiG,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,OACLkK,YAAY,OACZC,SAAU,SAAC1B,GAAD,OAAOJ,EAAaI,EAAE2B,OAAO1I,aAKvD,kBAACyH,GAAA,EAAMhD,OAAP,KACI,kBAAC4B,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,KAAK,UAAjC,UAGA,kBAAC+H,EAAA,EAAD,CAAQC,QAAQ,OAAO/F,UAAU,oBAAoBiG,QAAStH,EAAM6I,OAApE,cAKR,yBAAKxH,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UAQjE+B,GAAe,SAACzJ,GAEzB,MAAgCuB,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAA8BpI,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KAGIC,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,yCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjB0B,SAAUA,MAXX,OAcQ,OAXfzB,EAHO,QAcHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BAAb,oCACX6G,YAAW,WACH/B,OAAOgC,SAASC,WACjB,MAGPT,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aArBlE,gDAwBXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAxB9D,yDAAH,sDA4BhB,OACI,kBAAC,IAAMY,SAAP,KACI,kBAACC,GAAA,EAAD,CAAOC,GAAID,KAAME,OAAQC,UAAQ,EAACC,KAAM3I,EAAM2I,KAAMC,OAAQ5I,EAAM6I,MAAO9F,GAAG,kBACxE,kBAACwF,GAAA,EAAMzE,OAAP,KACI,kBAACyE,GAAA,EAAMO,MAAP,CAAazH,UAAU,MAAvB,qBACA,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,QAAQ2B,aAAW,QAAQzB,QAAStH,EAAM6I,SAE9D,kBAACN,GAAA,EAAM9F,KAAP,KACI,kBAACuG,GAAA,EAAD,CAAMC,SAAUrB,GACZ,kBAAClF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,YACX,kBAACiG,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,OACLkK,YAAY,YACZC,SAAU,SAAC1B,GAAD,OAAO8B,EAAY9B,EAAE2B,OAAO1I,aAKtD,kBAACyH,GAAA,EAAMhD,OAAP,KACI,kBAAC4B,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,KAAK,UAAjC,UAGA,kBAAC+H,EAAA,EAAD,CAAQC,QAAQ,OAAO/F,UAAU,oBAAoBiG,QAAStH,EAAM6I,OAApE,cAKR,yBAAKxH,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UAQjEkC,GAAY,SAAC5J,GAEtB,MAA0BuB,mBAAS,IAAnC,mBAAOsI,EAAP,KAAcC,EAAd,KACA,EAA8BvI,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KAGIC,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,yCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjB6B,MAAOA,MAXR,OAcQ,OAXf5B,EAHO,QAcHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BAAb,gCACX6G,YAAW,WACH/B,OAAOgC,SAASC,WACjB,MAGPT,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aArBlE,gDAwBXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAxB9D,yDAAH,sDA4BhB,OACI,kBAAC,IAAMY,SAAP,KACI,kBAACC,GAAA,EAAD,CAAOC,GAAID,KAAME,OAAQC,UAAQ,EAACC,KAAM3I,EAAM2I,KAAMC,OAAQ5I,EAAM6I,MAAO9F,GAAG,eACxE,kBAACwF,GAAA,EAAMzE,OAAP,KACI,kBAACyE,GAAA,EAAMO,MAAP,CAAazH,UAAU,MAAvB,iBACA,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,QAAQ2B,aAAW,QAAQzB,QAAStH,EAAM6I,SAE9D,kBAACN,GAAA,EAAM9F,KAAP,KACI,kBAACuG,GAAA,EAAD,CAAMC,SAAUrB,GACZ,kBAAClF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aACX,kBAACiG,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,OACLkK,YAAY,oBACZC,SAAU,SAAC1B,GAAD,OAAOiC,EAASjC,EAAE2B,OAAO1I,aAKnD,kBAACyH,GAAA,EAAMhD,OAAP,KACI,kBAAC4B,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,KAAK,UAAjC,UAGA,kBAAC+H,EAAA,EAAD,CAAQC,QAAQ,OAAO/F,UAAU,oBAAoBiG,QAAStH,EAAM6I,OAApE,cAKR,yBAAKxH,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UC9MjEqC,GAAkB,WAG3B,MAAoCxI,mBAAS,IAA7C,mBAAOyI,EAAP,KAAmBC,EAAnB,KACIzC,EAAYwC,EAAWE,WACvBR,EAAWM,EAAWG,UACtBN,EAAQG,EAAWH,MAEvBnI,qBAAU,WAEFC,MAAM,kCAAmC,CACrCC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI6I,EAAc7I,MAC3BY,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAIzB,IAGH,MAA0CV,oBAAS,GAAnD,mBAAO6I,EAAP,KAAsBC,EAAtB,KACA,EAAkD9I,oBAAS,GAA3D,mBAAO+I,EAAP,KAA0BC,EAA1B,KACA,EAA4ChJ,oBAAS,GAArD,mBAAOiJ,EAAP,KAAuBC,EAAvB,KAEA,OACI,oCACI,kBAAClI,EAAA,EAAD,CAAMC,OAAO,QAAQnB,UAAU,2BAC3B,kBAACkB,EAAA,EAAKE,KAAN,KACI,wBAAIpB,UAAU,QAAd,kBACA,kBAAC2H,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aACX,kBAACiG,GAAA,EAAK0B,MAAN,sBACA,kBAAC1B,GAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACjK,KAAK,OAAO0B,MAAO0G,EAAWmD,UAAQ,MAGrE,kBAAChI,EAAA,EAAD,CAAKuG,GAAI,EAAG7H,UAAU,QAClB,uBAAGiG,QAAS,WACR+C,GAAiB,KAGjB,kBAAC,IAAD,CAAiBtG,KAAM6G,IAAavD,KAAK,SAGjD,kBAAC1E,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,YACX,kBAACiG,GAAA,EAAK0B,MAAN,uBACA,kBAAC1B,GAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACjK,KAAK,OAAO0B,MAAO4I,EAAUiB,UAAQ,MAGpE,kBAAChI,EAAA,EAAD,CAAKuG,GAAI,EAAG7H,UAAU,QAClB,uBAAGiG,QAAS,WACRiD,GAAqB,KAGrB,kBAAC,IAAD,CAAiBxG,KAAM6G,IAAavD,KAAK,UAIrD,kBAAC3E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuG,GAAI,GAAI7H,UAAU,QACnB,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,SACX,kBAACiG,GAAA,EAAK0B,MAAN,cACA,kBAAC1B,GAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACjK,KAAK,QAAQ0B,MAAO+I,EAAOc,UAAQ,MAGlE,kBAAChI,EAAA,EAAD,CAAKuG,GAAI,EAAG7H,UAAU,QAClB,uBAAGiG,QAAS,WACRmD,GAAkB,KAGlB,kBAAC,IAAD,CAAiB1G,KAAM6G,IAAavD,KAAK,aAOjE,kBAAC,GAAD,CACIsB,KAAMyB,EACNvB,MAAO,WAAOwB,GAAiB,MAEnC,kBAAC,GAAD,CACI1B,KAAM2B,EACNzB,MAAO,WAAO0B,GAAqB,MAEvC,kBAAC,GAAD,CACI5B,KAAM6B,EACN3B,MAAO,WAAO4B,GAAkB,QC/FjC,cACX,OACI,oCACI,kBAAC/H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACb,kBAAC,GAAD,U,yFCUPgI,GAAY,yDAAM,WAAMC,GAAN,iBAAA1K,EAAA,0DACvBzB,aAAaC,QAAQ,UADE,wBAEjBmM,EAAS,CACXnJ,QAAS,CACL,eAAgB,mBAChB,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,OAAU,qBANK,kBAWDoM,KAAMC,IAAN,UAAaC,sBAAb,mBAA6DH,GAX5D,OAWb9C,EAXa,OAanB6C,EAAS,CACL1L,KZ7BmB,sBY8BnBC,QAAS4I,EAAI7G,OAfE,gDAkBnB0J,EAAS,CACL1L,KZjCgB,qBYcD,gCAuBvB0L,EAAS,CACL1L,KZtCoB,qBYcD,yDAAN,uDCiHV+L,gBAJS,SAAAjM,GAAK,MAAK,CAC9BJ,gBAAiBI,EAAMD,KAAKH,mBAGQ,CAACsM,MDhBpB,SAACvB,EAAOwB,GAAR,8CAAqB,WAAMP,GAAN,mBAAA1K,EAAA,6DAChC2K,EAAS,CACXnJ,QAAS,CACL,eAAgB,qBAIlBkF,EAAOiB,KAAKC,UAAU,CAAC6B,QAAOwB,aAPE,kBAUhBL,KAAMM,KAAN,UAAcJ,sBAAd,qBAAgEpE,EAAMiE,GAVtD,OAU5B9C,EAV4B,OAYlC6C,EAAS,CACL1L,KZnIiB,gBYoIjBC,QAAS4I,EAAI7G,OAGjB0J,EAASD,MAjByB,kDAmBlCC,EAAS,CACL1L,KZzIc,eYqHgB,0DAArB,wDCgBN+L,EAzHD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOtM,EAAqB,EAArBA,gBACnB,EAAgCyC,mBAAS,CACrCsI,MAAO,GACPwB,SAAU,KAFd,mBAAOE,EAAP,KAAiBC,EAAjB,KAKO3B,EAAmB0B,EAAnB1B,MAAOwB,EAAYE,EAAZF,SAER9B,EAAW,SAAA1B,GAAC,OAAI2D,EAAY,2BAAID,GAAL,mBAAgB1D,EAAE2B,OAAOiC,KAAO5D,EAAE2B,OAAO1I,UAOpE4K,EAAkB,uCAAG,4BAAAtL,EAAA,+EAED4K,KAAMC,IAAN,UAAaC,sBAAb,+CAAiFA,sBAAjF,YAFC,OAEbjD,EAFa,OAInB9B,OAAOgC,SAASwD,QAAQ1D,EAAI7G,KAAKwK,mBAJd,uGAAH,qDAUxB,OAAI9M,EACO,kBAAC,IAAD,CAAU+M,GAAItN,EAAyBC,OAI9C,8BACI,6BAAS6C,UAAU,kDACf,kBAACyK,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CAAKrB,UAAU,uCAAuC0K,MAAO,CAACC,gBAAgB,OAAD,OAASC,KAAT,OACzE,kBAACtJ,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,uBAEJ,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAU,SAAApB,GAAC,OA7B7C,SAAAA,GACbA,EAAEC,iBACFsD,EAAMvB,EAAOwB,GA2BiDpC,CAASpB,KAC3C,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,QAAQ1B,UAAU,QAC7B,kBAAC2H,GAAA,EAAK0B,MAAN,mBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMqI,OAE3B,kBAACpD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,QACLkK,YAAY,sBACZmC,KAAK,QACL3K,MAAO+I,EACPN,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,QAIpC,kBAACmB,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC2H,GAAA,EAAK0B,MAAN,sBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMuI,OAE3B,kBAACtD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,WACLkK,YAAY,eACZmC,KAAK,WACL3K,MAAOuK,EACP9B,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,IACxB0E,UAAU,QAItB,yBAAKlL,UAAU,0DACX,kBAAC2H,GAAA,EAAKwD,MAAN,CAAYpN,KAAK,YACb,kBAACqN,GAAA,EAAUC,MAAX,CAAiB3J,GAAG,gBAAgB1B,UAAU,SAC9C,kBAACoL,GAAA,EAAU/B,MAAX,CAAiBiC,QAAQ,gBAAgBtL,UAAU,QAAnD,gBAGJ,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAqBC,KACnC6C,UAAU,kBADrB,oBAIR,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAKJ,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,aAAhB,kBAEJ,yBAAKA,UAAU,sCACX,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,gBACR/F,UAAU,2CACViG,QAASoE,GACb,kBAAC,IAAD,CAAiB3H,KAAM8I,SAG/B,yBAAKxL,UAAU,yDAC7B,0BAAMA,UAAU,aAAhB,kBAEE,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAcC,KAAM6C,UAAU,WAAvD,+BCmEL8J,gBAJS,SAAAjM,GAAK,MAAK,CAC9BJ,gBAAiBI,EAAMD,KAAKH,mBAGQ,CAACgO,OFxCnB,SAAC5C,EAAYC,EAAWN,EAAOwB,EAAU0B,GAAzC,8CAAyD,WAAMjC,GAAN,mBAAA1K,EAAA,6DACrE2K,EAAS,CACXnJ,QAAS,CACL,eAAgB,qBAIlBkF,EAAOiB,KAAKC,UAAU,CAACkC,aAAYC,YAAWN,QAAOwB,WAAU0B,gBAPM,kBAUrD/B,KAAMM,KAAN,UAAcJ,sBAAd,gBAA2DpE,EAAMiE,GAVZ,OAUjE9C,EAViE,OAYvE6C,EAAS,CACL1L,KZ1JkB,iBY2JlBC,QAAS4I,EAAI7G,OAdsD,gDAiBvE0J,EAAS,CACL1L,KZ9Je,gBY4IoD,yDAAzD,wDEwCP+L,EA1KA,SAAC,GAA+B,IAA9B2B,EAA6B,EAA7BA,OAAQhO,EAAqB,EAArBA,gBACrB,EAA4CyC,oBAAS,GAArD,mBAAOyL,EAAP,KAAuBC,EAAvB,KACA,EAAgC1L,mBAAS,CACrC2I,WAAY,GACZC,UAAW,GACXN,MAAO,GACPwB,SAAU,GACV0B,YAAa,KALjB,mBAAOxB,EAAP,KAAiBC,EAAjB,KAQOtB,EAAuDqB,EAAvDrB,WAAYC,EAA2CoB,EAA3CpB,UAAWN,EAAgC0B,EAAhC1B,MAAOwB,EAAyBE,EAAzBF,SAAU0B,EAAexB,EAAfwB,YAEzCxD,EAAW,SAAA1B,GAAC,OAAI2D,EAAY,2BAAID,GAAL,mBAAgB1D,EAAE2B,OAAOiC,KAAO5D,EAAE2B,OAAO1I,UAWpE4K,EAAkB,uCAAG,4BAAAtL,EAAA,+EAED4K,KAAMC,IAAN,UAAaC,sBAAb,+CAAiFA,sBAAjF,YAFC,OAEbjD,EAFa,OAInB9B,OAAOgC,SAASwD,QAAQ1D,EAAI7G,KAAKwK,mBAJd,uGAAH,qDAUxB,OAAI9M,EACO,kBAAC,IAAD,CAAU+M,GAAG,MAEpBmB,EACO,kBAAC,IAAD,CAAUnB,GAAG,WAIpB,8BACI,6BAASxK,UAAU,kDACf,kBAACyK,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CAAKrB,UAAU,uCAAuC0K,MAAO,CAACC,gBAAgB,OAAD,OAASC,KAAT,OACzE,uBAAG5K,UAAU,eACT,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAcC,KAAM6C,UAAU,iBACnD,kBAAC,IAAD,CAAiB0C,KAAMmJ,IAAa7L,UAAU,SADlD,qBAIJ,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,uBAEJ,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAU,SAAApB,GAAC,OAzC7C,SAAAA,GACbA,EAAEC,iBAEEuD,IAAa0B,IACbD,EAAO5C,EAAYC,EAAWN,EAAOwB,EAAU0B,GAC/CE,GAAkB,IAoCwChE,CAASpB,KAC3C,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aAAa1B,UAAU,QAClC,kBAAC2H,GAAA,EAAK0B,MAAN,mBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMoJ,OAE3B,kBAACnE,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLkK,YAAY,SACZmC,KAAK,aACL3K,MAAOoJ,EACPX,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,QAIpC,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,YAAY1B,UAAU,QACjC,kBAAC2H,GAAA,EAAK0B,MAAN,kBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMoJ,OAE3B,kBAACnE,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLkK,YAAY,QACZmC,KAAK,YACL3K,MAAOqJ,EACPZ,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,QAIpC,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,QAAQ1B,UAAU,QAC7B,kBAAC2H,GAAA,EAAK0B,MAAN,cACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMqI,OAE3B,kBAACpD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,QACLkK,YAAY,sBACZmC,KAAK,QACL3K,MAAO+I,EACPN,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,QAIpC,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC2H,GAAA,EAAK0B,MAAN,iBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMuI,OAE3B,kBAACtD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,WACLkK,YAAY,eACZmC,KAAK,WACL3K,MAAOuK,EACP9B,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,IACxB0E,UAAU,QAItB,kBAACvD,GAAA,EAAKG,MAAN,CAAYpG,GAAG,cAAc1B,UAAU,QACnC,kBAAC2H,GAAA,EAAK0B,MAAN,yBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMuI,OAE3B,kBAACtD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,WACLkK,YAAY,eACZmC,KAAK,cACL3K,MAAOiM,EACPxD,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,IACxB0E,UAAU,QAItB,kBAACpF,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,aAIJ,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,aAAhB,kBAEJ,yBAAKA,UAAU,sCACX,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,gBACR/F,UAAU,2CACViG,QAASoE,GACb,kBAAC,IAAD,CAAiB3H,KAAM8I,SAG/B,yBAAKxL,UAAU,mECxEhC8J,eAAQ,KAAM,CAACiC,uBHkHQ,SAACC,EAAKC,EAAOC,EAAcC,GAA3B,8CAA+C,WAAM1C,GAAN,iBAAA1K,EAAA,6DAC3E2K,EAAS,CACXnJ,QAAS,CACL,eAAgB,qBAIlBkF,EAAOiB,KAAKC,UAAU,CAACqF,MAAKC,QAAOC,eAAcC,oBAP0B,kBAUvExC,KAAMM,KAAN,UAAcJ,sBAAd,uCAAkFpE,EAAMiE,GAVjB,OAY7ED,EAAS,CACL1L,KZlNkC,mCYqMuC,gDAgB7E0L,EAAS,CACL1L,KZvN+B,gCYsM0C,yDAA/C,wDGlHvB+L,EAtFc,SAAC,GAAqC,IAApCsC,EAAmC,EAAnCA,MAAOL,EAA4B,EAA5BA,uBAClC,EAAsC7L,oBAAS,GAA/C,mBAAOmM,EAAP,KAAoBC,EAApB,KACA,EAAgCpM,mBAAS,CACrCgM,aAAc,GACdC,gBAAiB,KAFrB,mBAAOjC,EAAP,KAAiBC,EAAjB,KAKO+B,EAAiChC,EAAjCgC,aAAcC,EAAmBjC,EAAnBiC,gBAEfjE,EAAW,SAAA1B,GAAC,OAAI2D,EAAY,2BAAID,GAAL,mBAAgB1D,EAAE2B,OAAOiC,KAAO5D,EAAE2B,OAAO1I,UAY1E,OAAI4M,EACO,kBAAC,IAAD,CAAU7B,GAAG,WAIpB,8BACI,6BAASxK,UAAU,0DACf,kBAACyK,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CAAKrB,UAAU,0BACX,uBAAGA,UAAU,eACT,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAcC,KAAM6C,UAAU,iBACnD,kBAAC,IAAD,CAAiB0C,KAAMmJ,IAAa7L,UAAU,SADlD,qBAIJ,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,wBAAIA,UAAU,QAAd,kBACA,kBAAC2H,GAAA,EAAD,CAAMC,SAAU,SAAApB,GAAC,OA3B5B,SAAAA,GACbA,EAAEC,iBAEF,IAAMuF,EAAMI,EAAMG,OAAOP,IACnBC,EAAQG,EAAMG,OAAON,MAE3BF,EAAuBC,EAAKC,EAAOC,EAAcC,GACjDG,GAAe,GAoB8B1E,CAASpB,KAC1B,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,mBAAmB1B,UAAU,QACxC,kBAAC2H,GAAA,EAAK0B,MAAN,qBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMuI,OAE3B,kBAACtD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,WACLkK,YAAY,eACZmC,KAAK,eACL3K,MAAOyM,EACPhE,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,IACxB0E,UAAU,QAItB,kBAACvD,GAAA,EAAKG,MAAN,CAAYpG,GAAG,sBAAsB1B,UAAU,QAC3C,kBAAC2H,GAAA,EAAK0B,MAAN,yBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMuI,OAE3B,kBAACtD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,WACLkK,YAAY,mBACZmC,KAAK,kBACL3K,MAAO0M,EACPjE,SAAU,SAAA1B,GAAC,OAAI0B,EAAS1B,IACxB0E,UAAU,QAItB,kBAACpF,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,4BCTrB8J,eAAQ,KAAM,CAAC0C,eJkHA,SAAChE,GAAD,8CAAW,WAAMiB,GAAN,iBAAA1K,EAAA,6DAC/B2K,EAAS,CACXnJ,QAAS,CACL,eAAgB,qBAIlBkF,EAAOiB,KAAKC,UAAU,CAAC6B,UAPQ,kBAU3BmB,KAAMM,KAAN,UAAcJ,sBAAd,+BAA0EpE,EAAMiE,GAVrD,OAYjCD,EAAS,CACL1L,KZ9L0B,2BYiLG,gDAgBjC0L,EAAS,CACL1L,KZnMuB,wBYkLM,yDAAX,wDIlHf+L,EAhEO,SAAC,GAAsB,IAArB0C,EAAoB,EAApBA,eACpB,EAAsCtM,oBAAS,GAA/C,mBAAOmM,EAAP,KAAoBC,EAApB,KACA,EAAgCpM,mBAAS,CACrCsI,MAAO,KADX,mBAAO0B,EAAP,KAAiBC,EAAjB,KAIO3B,EAAS0B,EAAT1B,MAWP,OAAI6D,EACO,kBAAC,IAAD,CAAU7B,GAAG,WAIpB,8BACI,6BAASxK,UAAU,0DACf,kBAACyK,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CAAKrB,UAAU,0BACX,uBAAGA,UAAU,eACT,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAcC,KAAM6C,UAAU,iBACnD,kBAAC,IAAD,CAAiB0C,KAAMmJ,IAAa7L,UAAU,SADlD,qBAIJ,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,wBAAIA,UAAU,QAAd,kBACA,kBAAC2H,GAAA,EAAD,CAAMC,SAAU,SAAApB,GAAC,OAxB5B,SAAAA,GACbA,EAAEC,iBAEF+F,EAAehE,GACf8D,GAAe,GAoB8B1E,CAASpB,KAC1B,kBAACmB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,QAAQ1B,UAAU,QAC7B,kBAAC2H,GAAA,EAAK0B,MAAN,mBACA,kBAACwB,GAAA,EAAD,KACI,kBAACA,GAAA,EAAWC,KAAZ,KACI,kBAAC,IAAD,CAAiBpI,KAAMqI,OAE3B,kBAACpD,GAAA,EAAKI,QAAN,CACIC,UAAQ,EACRjK,KAAK,QACLkK,YAAY,sBACZmC,KAAK,QACL3K,MAAO+I,EACPN,SAAU,SAAA1B,GAAC,OAvCtC,SAAAA,GAAC,OAAI2D,EAAY,2BAAID,GAAL,mBAAgB1D,EAAE2B,OAAOiC,KAAO5D,EAAE2B,OAAO1I,SAuCfyI,CAAS1B,QAIpC,kBAACV,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,4B,+BCjDrB,cACb,OACE,8BACE,6BAASA,UAAU,2DACjB,kBAACyK,GAAA,EAAD,KACE,kBAACpJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gEACrB,6BACE,kBAACkB,EAAA,EAAKqK,KAAN,CAAWpE,GAAIoE,IAAMf,GAAItN,EAAyBC,MAChD,kBAACsP,GAAA,EAAD,CAAOC,IAAKC,KAAe3M,UAAU,oBAEvC,wBAAIA,UAAU,qBAAd,YACW,0BAAMA,UAAU,aAAhB,UAEX,uBAAGA,UAAU,aAAb,qGAIA,kBAAC8F,EAAA,EAAD,CAAQqB,GAAIoE,IAAMxF,QAAQ,UAAU/F,UAAU,gBAAgBwK,GAAItN,EAAyBC,MACzF,kBAAC,IAAD,CAAiBuF,KAAMkK,IAAe5M,UAAU,6BADlD,uBCkBD8J,eAAQ,KAAM,CAAC+C,ONsHR,SAACb,EAAKC,GAAN,8CAAgB,WAAMxC,GAAN,iBAAA1K,EAAA,6DAC5B2K,EAAS,CACXnJ,QAAS,CACL,eAAgB,qBAIlBkF,EAAOiB,KAAKC,UAAU,CAACqF,MAAKC,UAPA,kBAUxBtC,KAAMM,KAAN,UAAcJ,sBAAd,2BAAsEpE,EAAMiE,GAVpD,OAY9BD,EAAS,CACL1L,KZ/KsB,uBYkKI,gDAgB9B0L,EAAS,CACL1L,KZlLmB,oBYiKO,yDAAhB,wDMtHP+L,EAxCE,SAAC,GAAqB,IAApB+C,EAAmB,EAAnBA,OAAQT,EAAW,EAAXA,MACvB,EAAgClM,oBAAS,GAAzC,mBAAO4M,EAAP,KAAiBC,EAAjB,KAUA,OAAID,EACO,kBAAC,IAAD,CAAUtC,GAAG,WAIpB,8BACI,6BAASxK,UAAU,yEAAyE0K,MAAO,CAACC,gBAAgB,OAAD,OAASC,KAAT,OAC/G,kBAACH,GAAA,EAAD,KACQ,kBAACnJ,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,uBACA,sFAEJ,kBAAC8F,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,cAC1CiG,QAvBb,SAAAO,GACnB,IAAMwF,EAAMI,EAAMG,OAAOP,IACnBC,EAAQG,EAAMG,OAAON,MAE3BY,EAAOb,EAAKC,GACZc,GAAY,KAiBY,+B,qBCTjBjD,eAAQ,KAAM,CAACkD,mBP0BI,SAACnP,EAAOoP,GAAR,8CAAiB,WAAMxD,GAAN,qBAAA1K,EAAA,0DAC3ClB,IAASoP,GAAS3P,aAAaC,QAAQ,UADI,wBAErCmM,EAAS,CACXnJ,QAAS,CACL,eAAgB,sCAIlB2M,EAAU,CACZ,MAASrP,EACT,KAAQoP,GAGNE,EAAWC,OAAOC,KAAKH,GAASlM,KAAI,SAAAS,GAAG,OAAI6L,mBAAmB7L,GAAO,IAAM6L,mBAAmBJ,EAAQzL,OAAO8L,KAAK,KAb7E,kBAgBrB5D,KAAMM,KAAN,UAAcJ,sBAAd,kCAAqEsD,GAAYzD,GAhB5D,OAgBjC9C,EAhBiC,OAkBvC6C,EAAS,CACL1L,KZvDmB,sBYwDnBC,QAAS4I,EAAI7G,OAGjB0J,EAASD,MAvB8B,kDAyBvCC,EAAS,CACL1L,KZ7DgB,qBYmCmB,0DAAjB,wDO1BnB+L,EAlBA,SAAC,GAA0B,IAAzBkD,EAAwB,EAAxBA,mBACTlG,EAAW0G,cAYf,OAVAnN,qBAAU,WACN,IAAMoN,EAASC,KAAYC,MAAM7G,EAAS8G,QACpC/P,EAAQ4P,EAAO5P,MAAQ4P,EAAO5P,MAAQ,KACtCoP,EAAOQ,EAAOR,KAAOQ,EAAOR,KAAO,KAErCpP,GAASoP,GACTD,EAAmBnP,EAAOoP,KAE/B,CAACnG,IAGA,kBAAC,IAAD,CAAU0D,GAAG,S,0FCRN,cAAiB,IACtB1D,EAAW0G,cACVK,EAAY/G,EAAZ+G,SACP,EAAwB3N,oBAAS,GAAjC,mBAAOoH,EAAP,KAAawG,EAAb,KACMC,EAAYzG,EAAO,OAAS,GAE5B0G,EAAa,kBAAMF,GAASxG,IAyB5B2G,EAAU,SAACtP,GACb,IACIwD,EASAxD,EATAwD,MACA+C,EAQAvG,EARAuG,KACAgJ,EAOAvP,EAPAuP,SACA/F,EAMAxJ,EANAwJ,OACAzF,EAKA/D,EALA+D,KACAyL,EAIAxP,EAJAwP,MACAC,EAGAzP,EAHAyP,UAPJ,EAUIzP,EAFA0P,eARJ,MAQc,YARd,IAUI1P,EADA2P,kBATJ,MASiB,UATjB,EAWMC,EAAaH,EAAY,0EAA4E,GACrGI,EAAmBtJ,IAAS2I,EAAW,SAAW,GAClDY,EAAYP,EAAW,CAAC7I,KAAMH,GAAQ,CAACiC,GAAIoE,IAAMf,GAAItF,GAE3D,OACI,kBAACwJ,GAAA,EAAIC,KAAL,CAAU3O,UAAWwO,EAAkBvI,QAAS,kBAAM6H,GAAQ,KAC1D,kBAACY,GAAA,EAAInD,KAAL,iBAAckD,EAAd,CAAyBtG,OAAQA,EAAQnI,UAAWuO,IAC1D,8BACG7L,EAAO,0BAAM1C,UAAU,gBAAe,kBAAC,IAAD,CAAiB0C,KAAMA,IAAtD,KAAwE,KAC7EyL,EAAQ,kBAAC1B,GAAA,EAAD,CAAOC,IAAKyB,EAAOS,MAAO,GAAIC,OAAQ,GAAI7O,UAAU,0BAA4B,KAEzF,0BAAMA,UAAU,gBAAgBmC,IAEzBiM,EACG,kBAACU,GAAA,EAAD,CAAOC,MAAI,EAACC,GAAIX,EAASY,KAAMX,EACxBtO,UAAU,oCAAoCoO,GACrD,QAMpB,OACI,oCACI,kBAACc,GAAA,EAAD,CAAQC,QAAQ,EAAOC,kBAAgB,EAACrJ,QAAQ,OAAO/F,UAAU,uCAC7D,kBAACkP,GAAA,EAAOG,MAAR,CAAcrP,UAAU,UAAUmH,GAAIoE,IAAMf,GAAItN,EAAyBC,MACrE,kBAACsP,GAAA,EAAD,CAAOC,IAAK4C,KAAWtP,UAAU,wBAErC,kBAACkP,GAAA,EAAOK,OAAR,CAAepI,GAAIrB,IAAQ0J,gBAAc,cAAcvJ,QAAS+H,GAC5D,0BAAMhO,UAAU,0BAGxB,kBAACyP,GAAA,EAAD,CAAeC,QAAS,IAAKC,GAAIrI,EAAMiH,WAAW,sBAC9C,kBAAC,KAAD,CAAWvO,UAAS,mBAAc+N,EAAd,8CAChB,yBAAK/N,UAAU,2BACX,yBACIA,UAAU,wGACV,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,WACX,wCACA,kBAAC8F,EAAA,EAAD,CAAQqB,GAAIoE,IAAMxF,QAAQ,YAAYC,KAAK,KAAKwE,GAAItN,EAAcC,KAC1D6C,UAAU,aACd,kBAAC,IAAD,CAAiB0C,KAAMkN,IAAc5P,UAAU,SAFnD,eAMR,kBAAC0O,GAAA,EAAInD,KAAL,CAAUvL,UAAU,2BAA2BiG,QAAS+H,GACpD,kBAAC,IAAD,CAAiBtL,KAAMmN,QAG/B,kBAACnB,GAAA,EAAD,CAAK1O,UAAU,4BACX,kBAACiO,EAAD,CAAS9L,MAAM,SAASO,KAAMoN,IAAY5K,KAAMhI,EAAyBC,OACzE,kBAAC8Q,EAAD,CAAS9L,MAAM,SAASO,KAAMqN,IAAkB7K,KAAMhI,EAAkBC,OACxE,kBAAC8Q,EAAD,CAAS9L,MAAM,UAAUO,KAAMsN,IAAQ9K,KAAMhI,EAAoBC,OACjE,kBAAC8Q,EAAD,CAAS9L,MAAM,YAAYO,KAAMuN,IAAQ/K,KAAMhI,EAAsBC,OACrE,kBAAC8Q,EAAD,CAAS9L,MAAM,SAASO,KAAMwN,KAAchL,KAAMhI,EAAgBC,a,UCzB/E2M,gBAJS,SAAAjM,GAAK,MAAK,CAC9BJ,gBAAiBI,EAAMD,KAAKH,mBAGQ,CAAC0S,OTmJnB,kBAAM,SAAA1G,GACxBA,EAAS,CACL1L,KZ1Nc,cqBqEP+L,EA5EA,SAAC,GAAc,IAAbqG,EAAY,EAAZA,OAEb,EAAoCjQ,mBAAS,IAA7C,mBAAOyI,EAAP,KAAmBC,EAAnB,KACA,EAAgC1I,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAGFC,MAAM,kCAAmC,CACrCC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI6I,EAAc7I,MAC3BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,mBAAoBF,MAGxCN,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,uBAAwBF,QAIjD,IAEH,MAAgCV,oBAAS,GAAzC,mBAAOkQ,EAAP,KAAiBC,EAAjB,KAMMC,EAAgBnQ,EAASa,KAAI,SAAAC,GAAC,OAAIA,EAAEsP,eAE1C,OACI,kBAAC,WAAD,KACI,kBAACrB,GAAA,EAAD,CAAQlP,UAAU,kBACd,kBAACyK,GAAA,EAAD,CAAW+F,OAAK,EAACxQ,UAAU,QACvB,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,4BACX,kBAAC0O,GAAA,EAAD,CAAK1O,UAAU,sBAAf,aAAgD,iCAAOsQ,KAE3D,kBAAC5B,GAAA,EAAD,CAAK1O,UAAU,sBACX,kBAACyQ,GAAA,EAAD,CAAUtJ,GAAIuH,KAAIC,MACd,kBAAC8B,GAAA,EAASlB,OAAV,CAAiBpI,GAAIuH,KAAInD,KAAMvL,UAAU,aACrC,yBAAKA,UAAU,mCACP,0BACIA,UAAU,2BAA2B2I,EAAWE,WADpD,IACiEF,EAAWG,aAGxF,kBAAC2H,GAAA,EAASC,KAAV,CAAe1Q,UAAU,0CACrB,kBAACyQ,GAAA,EAAS9B,KAAV,CAAe3O,UAAU,UAAUiG,QAxB/C,WAChBkK,IACAE,GAAY,KAuBoB,kBAAC,IAAD,CAAiB3N,KAAMkN,IAAc5P,UAAU,qBADnD,iBASvBoQ,EAAW,kBAAC,IAAD,CAAU5F,GAAG,WAAa,S,qBCvEnC,YAAC7L,GACd,IAAMgS,EAAcC,OAAShH,IAAI,QAGjC,OACE,6BACE,4BAAQ5J,UAAU,uBAChB,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIsP,GAAI,EAAG7Q,UAAU,gBAC5B,uBAAGA,UAAU,iCAAb,iCACuB2Q,EADvB,KAEE,kBAACzP,EAAA,EAAKqK,KAAN,CAAWlG,KAAK,kCAAkC8C,OAAO,SAASnI,UAAU,4CAA5E,mCAKJ,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIsP,GAAI,GACf,wBAAI7Q,UAAU,qFACZ,wBAAIA,UAAU,iCACZ,kBAACkB,EAAA,EAAKqK,KAAN,CAAWlG,KAAK,+BAA+B8C,OAAO,UAAtD,UAIF,wBAAInI,UAAU,iCACZ,kBAACkB,EAAA,EAAKqK,KAAN,CAAWlG,KAAK,gCAAgC8C,OAAO,UAAvD,WAIF,wBAAInI,UAAU,iCACZ,kBAACkB,EAAA,EAAKqK,KAAN,CAAWlG,KAAK,8BAA8B8C,OAAO,UAArD,SAIF,wBAAInI,UAAU,iCACZ,kBAACkB,EAAA,EAAKqK,KAAN,CAAWlG,KAAK,iCAAiC8C,OAAO,UAAxD,kB,qBCjCD,YAACxJ,GAEd,IAAQ2I,EAAS3I,EAAT2I,KAER,OACE,yBAAKtH,UAAS,kFAA6EsH,EAAO,GAAK,SACrG,kBAACmF,GAAA,EAAD,CAAOzM,UAAU,yDAAyD0M,IAAKoE,KAAWjC,OAAQ,OCLzF,cACX,OACI,8BACI,6BAAS7O,UAAU,gDACf,kBAACyK,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CAAKrB,UAAU,yBAAyB0K,MAAO,CAACC,gBAAgB,OAAD,OAASC,KAAT,OAC3D,kBAACtJ,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,yBAEJ,kBAAC8F,EAAA,EAAD,CAAQqB,GAAIoE,IAAMf,GAAItN,EAAqBC,KAAM4I,QAAQ,UACjD/F,UAAU,cADlB,qBAEA,kBAAC8F,EAAA,EAAD,CAAQqB,GAAIoE,IAAMf,GAAItN,EAAoBC,KAAM4I,QAAQ,UAChD/F,UAAU,cADlB,kBAEA,kBAAC8F,EAAA,EAAD,CAAQqB,GAAIoE,IAAMf,GAAItN,EAAYC,KAAM4I,QAAQ,UAAU/F,UAAU,cAApE,qB,iDChBjB,I,MAAA,YAA6B,IAA3B+Q,EAA0B,EAA1BA,MAA0B,IAAnBC,aAAmB,SAEnCC,IAAaF,EAEjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAA8BhR,mBAAS,IAAvC,mBAAOoD,EAAP,KAAgB6N,EAAhB,KACA,EAAwCjR,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAAgCnR,mBAAS,IAAzC,mBAAOqD,EAAP,KAAiB+N,EAAjB,KACA,EAAwBpR,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAAsCpG,mBAAS,IAA/C,mBAAOuR,EAAP,KAAoBC,EAApB,KAGArR,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,iBAAkBF,QAI3C,IAIHP,qBAAU,WAGNC,MAAM,wCAAyC,CAC3CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI2R,EAAe3R,MAC5BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,iBAAkBF,QAGvC,IAEH,IAII2F,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,wCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNC,QAASA,EACTqO,eAjBJC,EAiB4BR,EAhBjCQ,EAAKpM,mBAAmB,UAiBfjC,SAAUA,EACVgO,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,GACtBsP,MAAOA,MAjBR,OAoBQ,OAjBfpK,EAHO,QAoBHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BACnBgR,EAAQ,8BAAgC,kCAG7CE,EAAQ,mBACRG,EAAgB,IAAI9L,MACpB4L,EAAW,IACXG,EAAY,IACZE,EAAQ,KAGY,MAAf5K,EAAIlC,OACT4B,EAAW,uBAAGtG,UAAU,4BAAb,8CAIXsG,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aArClE,gDAwCXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAxC9D,kCAJJ,IAACuL,IAIG,oBAAH,sDA4ChB,OACI,kBAACvQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,GAC7B,kBAACoB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKkK,OAAN,CACI7G,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLqM,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QAClCqS,OAAQb,GAER,4BAAQjR,UAAU,UAAUyB,IAAI,GAAGhC,MAAM,IAAzC,mBAGCgS,EAAYzQ,KAAI,SAAA+Q,GAAK,OAClB,4BAAQ/R,UAAU,UAAUP,MAAOsS,EAAMrQ,IACpCqQ,EAAM1O,YAM3B,kBAACsE,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAACgS,GAAA,EAAD,CAAWhS,UAAU,iBAArB,0BACI,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViS,WAAW,aACXC,SAAUd,EACVlJ,SAAU,SAACnI,GAAD,OAAUsR,EAAgBtR,SAKpD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,UAAU1B,UAAU,QAC/B,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,UACL+H,aAAc7O,EACd2E,YAAY,gBACZmK,cAAe,EACfC,OAAO,KACPnK,SAAU,SAAC1B,GAAD,OAAO2K,EAAW3K,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,IAAIgI,WAAW,IAAK,UAIzF,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,SACLkK,YAAY,WACZmC,KAAK,WACL3K,MAAO8D,EACP8O,OAAO,KACPnK,SAAU,SAAC1B,GAAD,OAAO8K,EAAY9K,EAAE2B,OAAO1I,YAIlD,kBAACkI,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPrJ,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,OAA0CuD,EAAWD,GAASO,QAAQ,IACtE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,WCnL/D,eAA6B,IAA3B0K,EAA0B,EAA1BA,MAA0B,IAAnBC,aAAmB,SAGnCC,IAAaF,EAEjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAA8BhR,mBAAS,IAAvC,mBAAOoD,EAAP,KAAgB6N,EAAhB,KACA,EAAwCjR,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAAgCnR,mBAAS,IAAzC,mBAAOqD,EAAP,KAAiB+N,EAAjB,KACA,EAAwBpR,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAAsCpG,mBAAS,IAA/C,mBAAOuR,EAAP,KAAoBC,EAApB,KAGArR,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,gBAAiBF,QAI1C,IAGHP,qBAAU,WAGNC,MAAM,wCAAyC,CAC3CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI2R,EAAe3R,MAC5BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,gBAAiBF,QAGtC,IAEH,IAII2F,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,uCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNC,QAASA,EACTqO,eAjBJC,EAiB4BR,EAhBjCQ,EAAKpM,mBAAmB,UAiBfjC,SAAUA,EACVgO,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,GACtBsP,MAAOA,MAjBR,OAoBQ,OAjBfpK,EAHO,QAoBHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BACnBgR,EAAQ,8BAAgC,kCAG7CE,EAAQ,mBACRG,EAAgB,IAAI9L,MACpB4L,EAAW,IACXG,EAAY,IACZE,EAAQ,KAERlL,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aA/BlE,gDAkCXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAlC9D,kCAJJ,IAACuL,IAIG,oBAAH,sDAsChB,OACI,kBAACvQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,GAC7B,kBAACoB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKkK,OAAN,CACI7G,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLqM,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QAClCqS,OAAQb,GAER,4BAAQjR,UAAU,UAAUyB,IAAI,GAAGhC,MAAM,IAAzC,mBAGCgS,EAAYzQ,KAAI,SAAA+Q,GAAK,OAClB,4BAAQ/R,UAAU,UAAUP,MAAOsS,EAAMrQ,IACpCqQ,EAAM1O,YAM3B,kBAACsE,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAACgS,GAAA,EAAD,CAAWhS,UAAU,iBAArB,0BACI,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViS,WAAW,aACXC,SAAUd,EACVlJ,SAAU,SAACnI,GAAD,OAAUsR,EAAgBtR,SAKpD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,UAAU1B,UAAU,QAC/B,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,UACL+H,aAAc7O,EACd2E,YAAY,8BACZmK,cAAe,EACfC,OAAO,IACPnK,SAAU,SAAC1B,GAAD,OAAO2K,EAAW3K,EAAE2B,OAAO1I,MAAM6K,QAAQ,IAAK,IAAIgI,WAAW,IAAK,UAIxF,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,SACLkK,YAAY,WACZmC,KAAK,WACL3K,MAAO8D,EACP2E,SAAU,SAAC1B,GAAD,OAAO8K,EAAY9K,EAAE2B,OAAO1I,YAIlD,kBAACkI,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPc,OAAO,IACPnK,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,MAAyCuD,EAAWD,GAASO,QAAQ,IACrE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,GAAoB,UC7KxD,eAAc,IAAZ0K,EAAW,EAAXA,MAGTE,IAAaF,EA2BjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAA8BhR,mBAAS,IAAvC,mBAAOqS,EAAP,KAAgBC,EAAhB,KACA,EAAwCtS,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAA4CnR,mBAAS,IAArD,mBAAOuS,EAAP,KAAuBC,EAAvB,KACA,EAA0CxS,mBAAS,IAAnD,mBAAOyS,EAAP,KAAsBC,EAAtB,KACA,EAA0C1S,mBAAS,IAAnD,mBAAO2S,EAAP,KAAsBC,EAAtB,KACA,EAAoC5S,qBAApC,mBAAO6S,EAAP,KAAmBC,EAAnB,KACA,EAAgC9S,mBAAS,IAAzC,mBAAO+S,EAAP,KAAiBC,EAAjB,KACA,EAAwBhT,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,GAAhB,KAGAjG,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,mBAAoBF,QAI7C,IAEH,IAAIuS,GAAW,SAACvB,GACZ,OAAOA,EAAKpM,mBAAmB,UAG/Be,GAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,qCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNkP,QAASA,EACTZ,cAAewB,GAAS/B,GACxBgC,gBAAiBX,EACjBY,eAAgBV,EAChBI,WAAYI,GAASJ,GACrBF,cAAeA,EACfI,SAAUA,EACV1B,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,OApBvB,OAuBQ,OApBfkF,EAHO,QAuBHlC,QACJ4B,GAAW,uBAAGtG,UAAU,4BAAb,kCAEXkR,EAAQ,IACRsB,EAAW,IACXnB,EAAgB,IAAI9L,MACpBmN,EAAkB,IAClBE,EAAiB,IACjBE,EAAiB,IACjBE,IACAE,EAAY,IACZ1B,EAAQ,KAERlL,GAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aApClE,gDAuCXV,GAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAvC9D,yDAAH,sDA2ChB,OACI,kBAAChF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,IAC5B0K,EACG,kBAACtJ,GAAA,EAAKG,MAAN,CAAYpG,GAAG,QACX,kBAACmJ,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLqM,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QAClCqS,QAAQ,MAKpB,kBAACnK,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CACItI,WAAS,EACThD,UAAQ,EACRoC,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,SA/HjD,CACb,CAAC2K,KAAM,uBAAwB3K,MAAO,IACtC,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,KAAM3K,MAAO,MACpB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,QAuHiBuB,KAAI,SAAAuS,GAAO,OACjB,4BAAQvT,UAAU,UAAUyB,IAAK8R,EAAQ9T,MAAOA,MAAO8T,EAAQ9T,OAC1D8T,EAAQnJ,YAOjC,kBAACzC,GAAA,EAAKG,MAAN,CAAYpG,GAAG,UAAU1B,UAAU,QAC/B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLkK,YAAY,gBACZmC,KAAK,UACL3K,MAAO8S,EACPrK,SAAU,SAAC1B,GAAD,OAAOgM,EAAWhM,EAAE2B,OAAO1I,YAIjD,kBAACkI,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAACgS,GAAA,EAAD,CAAWhS,UAAU,iBAArB,0BACI,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViS,WAAW,aACXC,SAAUd,EACVlJ,SAAU,SAACnI,GAAD,OAAUsR,EAAgBtR,SAKpD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,kBAAkB1B,UAAU,QACvC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,iBACL+H,aAAcM,EACdxK,YAAY,kBACZmK,cAAe,EACfC,OAAO,KACP5S,MAAOgT,EACPvK,SAAU,SAAC1B,GAAD,OAAOkM,EAAkBlM,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,IAAIgI,WAAW,IAAK,UAIhG,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,iBAAiB1B,UAAU,QACtC,kBAAC6K,GAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CACItI,WAAS,EACThD,UAAQ,EACRoC,KAAK,iBACLnC,YAAY,0BACZxI,MAAOkT,EACPzK,SAAU,SAAC1B,GAAD,OAAOoM,EAAiBpM,EAAE2B,OAAO1I,SA7KhD,CACnB,CAAC2K,KAAM,8BAAyB3K,MAAO,IACvC,CAAC2K,KAAM,SAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,OAAQ3K,MAAO,QACtB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,SAAU3K,MAAO,UACxB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,SAAU3K,MAAO,WAsKgBuB,KAAI,SAAAwS,GAAI,OACpB,4BAAQxT,UAAU,UAAUyB,IAAK+R,EAAK/T,MAAOA,MAAO+T,EAAK/T,OACpD+T,EAAKpJ,YAM1B,kBAACzC,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,gBACL+H,aAAcU,EACd5K,YAAY,gBACZmK,cAAe,EACfqB,OAAO,IACPC,UAAW,EACXjU,MAAOoT,EACP3K,SAAU,SAAC1B,GAAD,OAAOsM,EAAiBtM,EAAE2B,OAAO1I,MAAM6K,QAAQ,IAAK,UAI1E,kBAAC0H,GAAA,EAAD,CAAWhS,UAAU,cAArB,cACI,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aAAa1B,UAAU,QAClC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViI,YAAY,aACZgK,WAAW,aACXC,SAAUa,EACV7K,SAAU,SAACnI,GAAD,OAAUiT,EAAcjT,SAKlD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRgD,WAAS,EACT/C,YAAY,WACZmC,KAAK,WACLgI,cAAe,EACfC,OAAO,KACPqB,UAAW,EACXvB,aAAcc,EACdxT,MAAOwT,EACP/K,SAAU,SAAC1B,GAAD,OAAO0M,EAAY1M,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,UAItE,kBAAC3C,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPrJ,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,OAA0C,EAAIyS,GAAgB5O,QAAQ,IACtE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UCxQ/D,eAAc,IAAZ0K,EAAW,EAAXA,MAGTE,IAAaF,EAcjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAAwChR,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAA4CnR,mBAAS,IAArD,mBAAOuS,EAAP,KAAuBC,EAAvB,KACA,EAA0CxS,mBAAS,IAAnD,mBAAOyS,EAAP,KAAsBC,EAAtB,KACA,EAA0C1S,mBAAS,IAAnD,mBAAO2S,EAAP,KAAsBC,EAAtB,KACA,EAAoC5S,qBAApC,mBAAO6S,EAAP,KAAmBC,EAAnB,KACA,EAAwB9S,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KAGAjG,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,uBAAwBF,QAIjD,IAEH,IAAIuS,EAAW,SAACvB,GACZ,OAAOA,EAAKpM,mBAAmB,UAG/Be,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,wCAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNsO,cAAewB,EAAS/B,GACxBgC,gBAAiBX,EACjBY,eAAgBV,EAChBE,cAAeA,EACfE,WAAYI,EAASJ,GACrBxB,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,OAlBvB,OAqBQ,OAlBfkF,EAHO,QAqBHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BAAb,kCAEXkR,EAAQ,IACRG,EAAgB,IAAI9L,MACpBmN,EAAkB,IAClBE,EAAiB,IACjBE,EAAiB,IACjBE,EAAc,IAAIzN,MAClBiM,EAAQ,KAERlL,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aAhClE,gDAmCXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UAnC9D,yDAAH,sDAuChB,OACI,kBAAChF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,GAC7B,kBAACoB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLkK,YAAY,oBACZmC,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QACjCqS,OAAQb,MAIrB,kBAACtJ,GAAA,EAAKG,MAAN,CAAYpG,GAAG,kBAAkB1B,UAAU,QACvC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,iBACL+H,aAAcM,EACdxK,YAAY,kBACZmK,cAAe,EACfC,OAAO,KACP5S,MAAOgT,EACPvK,SAAU,SAAC1B,GAAD,OAAOkM,EAAkBlM,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,IAAIgI,WAAW,IAAK,UAIhG,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,iBAAiB1B,UAAU,QACtC,kBAAC6K,GAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CACItI,WAAS,EACThD,UAAQ,EACRoC,KAAK,iBACLnC,YAAY,0BACZxI,MAAOkT,EACPzK,SAAU,SAAC1B,GAAD,OAAOoM,EAAiBpM,EAAE2B,OAAO1I,SA3HhD,CACnB,CAAC2K,KAAM,8BAAyB3K,MAAO,IACvC,CAAC2K,KAAM,SAAO3K,MAAO,OACrB,CAAC2K,KAAM,MAAO3K,MAAO,OACrB,CAAC2K,KAAM,OAAQ3K,MAAO,QACtB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,SAAU3K,MAAO,UACxB,CAAC2K,KAAM,QAAS3K,MAAO,SACvB,CAAC2K,KAAM,SAAU3K,MAAO,WAoHgBuB,KAAI,SAAAwS,GAAI,OACpB,4BAAQxT,UAAU,UAAUyB,IAAK+R,EAAK/T,MAAOA,MAAO+T,EAAK/T,OACpD+T,EAAKpJ,YAM1B,kBAACzC,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,gBACL+H,aAAcU,EACd5K,YAAY,gBACZmK,cAAe,EACfqB,OAAO,IACPC,UAAW,EACXjU,MAAOoT,EACP3K,SAAU,SAAC1B,GAAD,OAAOsM,EAAiBtM,EAAE2B,OAAO1I,MAAM6K,QAAQ,IAAK,UAI1E,kBAAC0H,GAAA,EAAD,CAAWhS,UAAU,cAArB,cACI,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,aAAa1B,UAAU,QAClC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViI,YAAY,aACZgK,WAAW,aACXC,SAAUa,EACV7K,SAAU,SAACnI,GAAD,OAAUiT,EAAcjT,SAKlD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPrJ,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,OAA0C,EAAIyS,GAAgB5O,QAAQ,IACtE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UCxL/D,eAA2B,IAAzB0K,EAAwB,EAAxBA,MAAwB,IAAjBC,aAAiB,SAGjCC,IAAaF,EAEjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAAwChR,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAA8BnR,mBAAS,IAAvC,mBAAOoD,EAAP,KAAgB6N,EAAhB,KACA,EAAgCjR,mBAAS,IAAzC,mBAAOqD,EAAP,KAAiB+N,EAAjB,KACA,EAAwBpR,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAAsCpG,mBAAS,IAA/C,mBAAOuR,EAAP,KAAoBC,EAApB,KAGArR,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAI/C,IAGHP,qBAAU,WAGNC,MAAM,4CAA6C,CAC/CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAI2R,EAAe3R,MAC5BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAG3C,IAEH,IAII2F,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,4CAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNsO,eAhBJC,EAgB4BR,EAfjCQ,EAAKpM,mBAAmB,UAgBflC,QAASA,EACTC,SAAUA,EACVgO,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,GACtBsP,MAAOA,MAjBR,OAoBQ,OAjBfpK,EAHO,QAoBHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BACnBgR,EAAQ,8BAAgC,kCAG7CE,EAAQ,IACRG,EAAgB,IAAI9L,MACpB4L,EAAW,IACXG,EAAY,IACZE,EAAQ,KAERlL,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aA/BlE,gDAkCXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAI2T,SAlC9D,kCAJJ,IAAC/B,IAIG,oBAAH,sDAsChB,OACI,kBAACvQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,GAC7B,kBAACoB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC3B,kBAAC6K,GAAA,EAAD,KACG,kBAAClD,GAAA,EAAKkK,OAAN,CACI7G,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLqM,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QAClCqS,OAAQb,GAER,4BAAQjR,UAAU,UAAUyB,IAAI,GAAGhC,MAAM,IAAzC,mBAGCgS,EAAYzQ,KAAI,SAAA+Q,GAAK,OAClB,4BAAQ/R,UAAU,UAAUP,MAAOsS,EAAMrQ,IACpCqQ,EAAM1O,YAM3B,kBAACsE,GAAA,EAAKG,MAAN,CAAYpG,GAAG,gBAAgB1B,UAAU,QACrC,kBAACgS,GAAA,EAAD,CAAWhS,UAAU,iBAArB,0BACI,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACViS,WAAW,aACXC,SAAUd,EACVlJ,SAAU,SAACnI,GAAD,OAAUsR,EAAgBtR,SAKpD,kBAAC4H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,UAAU1B,UAAU,QAC/B,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,UACL+H,aAAc7O,EACd2E,YAAY,gBACZmK,cAAe,EACfC,OAAO,KACPnK,SAAU,SAAC1B,GAAD,OAAO2K,EAAW3K,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,IAAIgI,WAAW,IAAK,UAIzF,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,WAAW1B,UAAU,QAChC,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,SACLkK,YAAY,WACZmC,KAAK,WACL3K,MAAO8D,EACP2E,SAAU,SAAC1B,GAAD,OAAO8K,EAAY9K,EAAE2B,OAAO1I,YAIlD,kBAACkI,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPrJ,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,OAA0CuD,EAAWD,GAASO,QAAQ,IACtE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UC7K/D,eAAc,IAAZ0K,EAAW,EAAXA,MAGTE,IAAaF,EAEjB,EAAwB7Q,mBAAS6Q,GAAjC,mBAAO1N,EAAP,KAAa6N,EAAb,KACA,EAAwChR,mBAAS,IAAIqF,MAArD,mBAAO6L,EAAP,KAAqBC,EAArB,KACA,EAA4CnR,mBAAS,IAArD,mBAAOuS,EAAP,KAAuBC,EAAvB,KACA,EAA0CxS,mBAAS,IAAnD,mBAAOyS,EAAP,KAAsBC,EAAtB,KACA,EAAwB1S,mBAAS,IAAjC,mBAAOqR,EAAP,KAAaC,EAAb,KACA,EAAgCtR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KAGAjG,qBAAU,WAEFC,MAAM,yCAA0C,CAC5CC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIK,EAAYL,MACzBY,OAAM,SAAAC,GACHC,QAAQC,IAAI,qBAAsBF,QAI/C,IAEH,IAII2F,EAAY,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,6DACfyH,EAAEC,iBADa,kBAGKnG,MAAM,4CAClB,CACImE,OAAQ,OACRlE,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,WAC7C,eAAgB,oBAEpBkI,KAAMiB,KAAKC,UAAU,CACjBtD,KAAMA,EACNsO,eAhBJC,EAgB4BR,EAfjCQ,EAAKpM,mBAAmB,UAgBf4N,gBAAiBX,EACjBY,eAAgBV,EAChBpB,KAAMA,EACNpR,SAAUA,EAAS,GAAGuB,OAhBvB,OAmBQ,OAhBfkF,EAHO,QAmBHlC,QACJ4B,EAAW,uBAAGtG,UAAU,4BAAb,kCAEXkR,EAAQ,IACRG,EAAgB,IAAI9L,MACpBmN,EAAkB,IAClBE,EAAiB,IACjBpB,EAAQ,KAERlL,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D4G,EAAII,aA5BlE,gDA+BXV,EAAW,uBAAGtG,UAAU,2BAAb,qBAA0D,KAAIqG,UA/B9D,kCAJJ,IAACuL,IAIG,oBAAH,sDAmChB,OACI,kBAACvQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,gCACnB,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,OAAO4H,SAAUrB,GAC7B,kBAACoB,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACThD,UAAQ,EACRjK,KAAK,OACLkK,YAAY,oBACZmC,KAAK,OACL3K,MAAO4D,EACP6E,SAAU,SAAC1B,GAAD,OAAO0K,EAAQ1K,EAAE2B,OAAO1I,QAClCqS,OAAQb,MAIpB,kBAACtJ,GAAA,EAAKG,MAAN,CAAYpG,GAAG,kBAAkB1B,UAAU,QACvC,kBAAC6K,GAAA,EAAD,KACI,kBAAC,KAAD,CACI7K,UAAU,eACVgI,UAAQ,EACRoC,KAAK,iBACL+H,aAAcM,EACdxK,YAAY,kBACZmK,cAAe,EACfC,OAAO,KACP5S,MAAOgT,EACPvK,SAAU,SAAC1B,GAAD,OAAOkM,EAAkBlM,EAAE2B,OAAO1I,MAAM6K,QAAQ,KAAM,IAAIgI,WAAW,IAAK,UAIhG,kBAAC3K,GAAA,EAAKG,MAAN,CAAYpG,GAAG,OAAO1B,UAAU,QAC5B,kBAAC6K,GAAA,EAAD,KACI,kBAAClD,GAAA,EAAKI,QAAN,CACIiD,WAAS,EACTjN,KAAK,OACLkK,YAAY,mBACZmC,KAAK,OACL3K,MAAO8R,EACPrJ,SAAU,SAAC1B,GAAD,OAAOgL,EAAQhL,EAAE2B,OAAO1I,YAI9C,yBAAKO,UAAU,iCAAf,qCACA,yBAAKA,UAAU,uBAAf,OAA0C,EAAIyS,GAAgB5O,QAAQ,IACtE,kBAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUhI,KAAK,SAASiC,UAAU,SAAlD,YAGA,yBAAKA,UAAU,gBAAgBqG,EAAU,oCAAGA,GAAc,UCnH/D,cAEX,IASA,EAAkCnG,mBAAS,MAA3C,mBAAO0T,EAAP,KAAkBC,EAAlB,KACA,EAA8C3T,oBAAS,GAAvD,mBAAO4T,EAAP,KAAwBC,EAAxB,KACA,EAA4C7T,oBAAS,GAArD,mBAAO8T,EAAP,KAAuBC,EAAvB,KACA,EAAgD/T,oBAAS,GAAzD,mBAAOgU,EAAP,KAAyBC,EAAzB,KACA,EAA4CjU,oBAAS,GAArD,mBAAOkU,EAAP,KAAuBC,EAAvB,KACA,EAA0CnU,oBAAS,GAAnD,mBAAOoU,EAAP,KAAsBC,EAAtB,KACA,EAAsCrU,oBAAS,GAA/C,mBAAOsU,EAAP,KAAoBC,EAApB,KAEApU,qBAAU,WACe0T,EAAP,OAAdH,GACqBK,EAAP,OAAdL,GACqBO,EAAP,OAAdP,GACqBS,EAAP,OAAdT,GACqBW,EAAP,OAAdX,GACqBa,EAAP,OAAdb,KACD,CAACA,IAMJ,OACI,8BACI,6BAAS5T,UAAU,0CACf,kBAACyK,GAAA,EAAD,CAAWzK,UAAU,UACjB,kBAACqB,EAAA,EAAD,CAAKrB,UAAU,0BACX,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,8EACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,sBAEJ,0BAAMA,UAAU,eAAhB,wBACA,kBAACsT,GAAA,EAAD,CAAYpL,SAfjB,SAAC1B,GACpBqN,EAAarN,EAAE2B,OAAO1I,SA3BP,CACf,CAAC2K,KAAM,sBAAiB3K,MAAO,MAC/B,CAAC2K,KAAM,yBAAoB3K,MAAO,MAClC,CAAC2K,KAAM,aAAc3K,MAAO,MAC5B,CAAC2K,KAAM,iBAAkB3K,MAAO,MAChC,CAAC2K,KAAM,eAAgB3K,MAAO,MAC9B,CAAC2K,KAAM,eAAgB3K,MAAO,OAoCUuB,KAAI,SAAA4S,GAAS,OACrB,4BAAQ5T,UAAU,UAAUyB,IAAKmS,EAAUnU,MAAOA,MAAOmU,EAAUnU,OAC9DmU,EAAUxJ,UAKnB0J,EAAkB,kBAACY,GAAD,CAAa3D,MAAM,KACjCiD,EAAiB,kBAACW,GAAD,CAAY5D,MAAM,KAC/BmD,EAAmB,kBAACU,GAAD,CAAe7D,MAAM,KACpCqD,EAAiB,kBAACS,GAAD,CAAmB9D,MAAM,KACtCuD,EAAgB,kBAACQ,GAAD,CAAiB/D,MAAM,KACnCyD,EAAc,kBAACO,GAAD,CAAiBhE,MAAM,KACjC,YCzD7C,cAEX,MAA4C7Q,mBAAS,IAArD,mBAAO8U,EAAP,KAAuBC,EAAvB,KACA,EAA0C/U,mBAAS,IAAnD,mBAAOgV,EAAP,KAAsBC,EAAtB,KACMC,EAAYF,EAAcG,MAAM,KAAK,GACrCC,EAAYJ,EAAcG,MAAM,KAAK,GACrCE,EAAUL,EAAcG,MAAM,KAAK,GAGzC,EAA8CnV,oBAAS,GAAvD,mBAAO4T,EAAP,KAAwBC,EAAxB,KACA,EAA4C7T,oBAAS,GAArD,mBAAO8T,EAAP,KAAuBC,EAAvB,KACA,EAAgD/T,oBAAS,GAAzD,mBAAOgU,EAAP,KAAyBC,EAAzB,KACA,EAA4CjU,oBAAS,GAArD,mBAAOkU,EAAP,KAAuBC,EAAvB,KACA,EAA0CnU,oBAAS,GAAnD,mBAAOoU,EAAP,KAAsBC,EAAtB,KACA,EAAsCrU,oBAAS,GAA/C,mBAAOsU,EAAP,KAAoBC,EAApB,KA6BA,OA1BApU,qBAAU,WACoB0T,EAAZ,YAAdqB,GACgCnB,EAAlB,kBAAdmB,GAC4BjB,EAAd,cAAdiB,GACgCf,EAAlB,kBAAde,GAC8Bb,EAAhB,gBAAda,GAC8BX,EAAhB,gBAAdW,KACD,CAACA,IAGJ/U,qBAAU,WAGNC,MAAM,qCAAsC,CACxCC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIkV,EAAkBlV,MAC/BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,kBAAmBF,QAGxC,IAGC,8BACI,6BAASZ,UAAU,0CACf,kBAACyK,GAAA,EAAD,CAAWzK,UAAU,iCACjB,kBAACqB,EAAA,EAAD,CAAKrB,UAAU,0BACX,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,6FAEX,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,QACZ,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,mBAEJ,0BAAMA,UAAU,eAAhB,oBACA,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,iBAAiB1B,UAAU,QACtC,kBAAC6K,GAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CACItI,WAAS,EACThD,UAAQ,EACRoC,KAAK,iBACLnC,YAAY,0BACZxI,MAAOyV,EACPhN,SAAU,SAAC1B,GAAD,OAAO2O,EAAiB3O,EAAE2B,OAAO1I,SAE3C,4BAAQO,UAAU,UAAUyB,IAAI,GAAGhC,MAAM,KAAzC,kBAGCuV,EAAehU,KAAI,SAAA+Q,GAAK,OACrB,4BAAQ/R,UAAU,UAAUP,MAAOsS,EAAMhU,KAAO,IAAMgU,EAAM3H,KAAO,IAAM2H,EAAMrQ,IAC1EqQ,EAAM3H,aAQ3B0J,EAAkB,kBAACY,GAAD,CAAa3D,MAAOwE,IAClCvB,EAAiB,kBAACW,GAAD,CAAY5D,MAAOwE,IAChCrB,EAAmB,kBAACU,GAAD,CAAe7D,MAAOuE,IACrClB,EAAiB,kBAACS,GAAD,CAAmB9D,MAAOuE,IACvChB,EAAgB,kBAACQ,GAAD,CAAiB/D,MAAOwE,IACpCf,EAAc,kBAACO,GAAD,CAAiBhE,MAAOuE,IAClC,YCrF7C,cAEX,MAA4CpV,mBAAS,IAArD,mBAAO8U,EAAP,KAAuBC,EAAvB,KACA,EAA0C/U,mBAAS,IAAnD,mBAAOgV,EAAP,KAAsBC,EAAtB,KACMC,EAAYF,EAAcG,MAAM,KAAK,GACrCC,EAAYJ,EAAcG,MAAM,KAAK,GACrCE,EAAUL,EAAcG,MAAM,KAAK,GAGzC,EAA8CnV,oBAAS,GAAvD,mBAAO4T,EAAP,KAAwBC,EAAxB,KACA,EAA4C7T,oBAAS,GAArD,mBAAO8T,EAAP,KAAuBC,EAAvB,KACA,EAAgD/T,oBAAS,GAAzD,mBAAOgU,EAAP,KAAyBC,EAAzB,KACA,EAA4CjU,oBAAS,GAArD,mBAAOkU,EAAP,KAAuBC,EAAvB,KACA,EAA0CnU,oBAAS,GAAnD,mBAAOoU,EAAP,KAAsBC,EAAtB,KACA,EAAsCrU,oBAAS,GAA/C,mBAAOsU,EAAP,KAAoBC,EAApB,KA6BA,OA1BApU,qBAAU,WACoB0T,EAAZ,YAAdqB,GACgCnB,EAAlB,kBAAdmB,GAC4BjB,EAAd,cAAdiB,GACgCf,EAAlB,kBAAde,GAC8Bb,EAAhB,gBAAda,GAC8BX,EAAhB,gBAAdW,KACD,CAACA,IAGJ/U,qBAAU,WAGNC,MAAM,qCAAsC,CACxCC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIkV,EAAkBlV,MAC/BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,UAAWF,QAGhC,IAGC,8BACI,6BAASZ,UAAU,0CACf,kBAACyK,GAAA,EAAD,CAAWzK,UAAU,iCACjB,kBAACqB,EAAA,EAAD,CAAKrB,UAAU,0BACX,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIvB,UAAU,oDACnB,yBAAKA,UAAU,6FAEX,kBAAC2H,GAAA,EAAD,CAAM3H,UAAU,QACZ,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAd,eAEJ,0BAAMA,UAAU,eAAhB,oBACA,kBAAC2H,GAAA,EAAKG,MAAN,CAAYpG,GAAG,iBAAiB1B,UAAU,QACtC,kBAAC6K,GAAA,EAAD,KACI,kBAACyI,GAAA,EAAD,CACItI,WAAS,EACThD,UAAQ,EACRoC,KAAK,iBACLnC,YAAY,0BACZxI,MAAOyV,EACPhN,SAAU,SAAC1B,GAAD,OAAO2O,EAAiB3O,EAAE2B,OAAO1I,SAE3C,4BAAQO,UAAU,UAAUyB,IAAI,GAAGhC,MAAM,KAAzC,kBAGCuV,EAAehU,KAAI,SAAA+Q,GAAK,OACrB,4BAAQ/R,UAAU,UACVP,MAAOsS,EAAMhU,KAAO,IAAMgU,EAAM3H,KAAO,IAAM2H,EAAMrQ,IACtDqQ,EAAM3H,aAQ3B0J,EAAkB,kBAACY,GAAD,CAAa3D,MAAOwE,EAASvE,OAAO,IAClDgD,EAAiB,kBAACW,GAAD,CAAY5D,MAAOwE,EAASvE,OAAO,IAChDkD,EAAmB,kBAACU,GAAD,CAAe7D,MAAOuE,IACrClB,EAAiB,kBAACS,GAAD,CAAmB9D,MAAOuE,IACvChB,EAAgB,kBAACQ,GAAD,CAAiB/D,MAAOwE,EAASvE,OAAO,IACpDwD,EAAc,kBAACO,GAAD,CAAiBhE,MAAOuE,IAClC,YC5F7C,cAEX,MAAwCpV,mBAAS,IAAjD,mBAAOgD,EAAP,KAAqBC,EAArB,KACAtC,QAAQC,IAAIoC,GAEZ7C,qBAAU,WAGNC,MAAM,qCAAsC,CACxCC,QAAS,CACL,cAAgB,OAAhB,OAAwBjD,aAAaC,QAAQ,cAGhDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAT,GAAI,OAAIoD,EAAgBpD,MAC7BY,OAAM,SAAAC,GACHC,QAAQC,IAAI,UAAWF,QAGhC,IAEH,IAAMwC,EAAW,SAACzE,GACd,IAAOyL,EAA4EzL,EAA5EyL,KAAMoL,EAAsE7W,EAAtE6W,GAAIC,EAAkE9W,EAAlE8W,MAAOC,EAA2D/W,EAA3D+W,cAAeC,EAA4ChX,EAA5CgX,SAAUC,EAAkCjX,EAAlCiX,YAAaC,EAAqBlX,EAArBkX,YAAa9X,EAAQY,EAARZ,KACrE+X,EAAcF,EAAc,EAAI,UAAY,SAElD,OACI,4BACI,4BACN,0BAAM5V,UAAU,aACboK,IAGG,4BACN,0BAAMpK,UAAU,aACN,SAAPwV,EAAgB,yCAAK5R,WAAW4R,GAAI3R,QAAQ,IAAS,6CAGlD,4BACN,0BAAM7D,UAAU,aACbyV,IAGG,4BACN,0BAAMzV,UAAU,aAAhB,KACK2V,IAGC,4BACN,0BAAM3V,UAAU,aAAhB,KACK0V,IAGC,4BACN,0BAAM1V,UAAS,yBAAoB8V,IAChCF,EADH,MAIM,4BACN,0BAAM5V,UAAU,aACb6V,EADH,MAIM,4BACN,0BAAM7V,UAAU,aACbjC,MAOT,OACI,kBAACmD,EAAA,EAAD,CAAMC,OAAO,QAAQnB,UAAU,4CAC3B,kBAACkB,EAAA,EAAKE,KAAN,CAAWpB,UAAU,QACjB,kBAAC+D,GAAA,EAAD,CAAOC,OAAK,EAAChE,UAAU,iCACnB,+BACA,4BACI,wBAAIA,UAAU,iBAAd,SACA,wBAAIA,UAAU,iBAAd,qBACA,wBAAIA,UAAU,iBAAd,YACA,wBAAIA,UAAU,iBAAd,mBACA,wBAAIA,UAAU,iBAAd,eACA,wBAAIA,UAAU,iBAAd,qBACA,wBAAIA,UAAU,iBAAd,iBACA,wBAAIA,UAAU,iBAAd,UAGJ,+BACCkD,EAAalC,KAAI,SAAAiD,GAAC,OAAI,kBAACb,EAAD,eAAU3B,IAAG,eAAUwC,EAAEvC,KAAUuC,SAG9D,kBAAC/C,EAAA,EAAKgD,OAAN,CAAalE,UAAU,kEACnB,2BAAOA,UAAU,WAAjB,aACc,2BAAIkD,EAAaiB,QAD/B,mBC3FL,cACX,OACI,oCACI,yBAAKnE,UAAU,mFACX,yBAAKA,UAAU,wBACX,+CACA,uBAAGA,UAAU,QAAb,0CAIR,yBAAKA,UAAU,uBACX,kBAAC,GAAD,S,kCCeV+V,GAAkB,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,kBACzD,EAA4BhW,oBAAS,GAArC,mBAAOiW,EAAP,KAAeC,EAAf,KAOA,OALA/V,qBAAU,WACN,IAAMgW,EAAQxP,YAAW,kBAAMuP,GAAU,KAAO,KAChD,OAAO,kBAAME,aAAaD,MAC3B,IAGC,kBAAC,IAAD,iBAAWH,EAAX,CAAiBK,OAAQ,SAAA5X,GAAK,OAAK,wCAAG,kBAAC6X,GAAD,CAAWlP,MAAM6O,IAApB,IAA6C,kBAACH,EAAcrX,GAA5D,UAKrC8X,GAAmB,SAAC,GAAqC,IAAzBT,EAAwB,EAAnCC,UAAyBC,EAAU,kBAC1D,EAA4BhW,oBAAS,GAArC,mBAAOiW,EAAP,KAAeC,EAAf,KAEA/V,qBAAU,WACN,IAAMgW,EAAQxP,YAAW,kBAAMuP,GAAU,KAAO,KAChD,OAAO,kBAAME,aAAaD,MAC3B,IAEH,IAIA,EAAwCnW,oBAJF,WAClC,MAAmD,UAA5C5C,aAAaC,QAAQ,sBAGhC,mBAAOmZ,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,WACnBD,GAAiBD,GACjBpZ,aAAaW,QAAQ,mBAAoByY,IAG7C,OACI,kBAAC,IAAD,iBAAWR,EAAX,CAAiBK,OAAQ,SAAA5X,GAAK,OAC1BrB,aAAaC,QAAQ,UACjB,oCACI,kBAACiZ,GAAD,CAAWlP,MAAO6O,IAClB,kBAACU,GAAD,MAEA,0BAAM7W,UAAU,WACZ,kBAAC,GAAD,MACA,kBAACgW,EAAcrX,GACf,kBAACuF,GAAD,CAAQ0S,eAAgBA,EAAgBF,aAAcA,MAG9D,kBAAC,IAAD,CAAUlM,GAAI,CAACqD,SAAU3Q,EAAcC,KAAMU,MAAO,CAACiZ,KAAMnY,EAAMmI,kBAsClEiQ,GA/BH,kBACR,kBAAC,IAAD,CAAU1Y,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KAGI,kBAAC,GAAD,CAAkB2Y,OAAK,EAAC7Z,KAAMD,EAAyBC,KAAM8Y,UAAWgB,IACxE,kBAAC,GAAD,CAAkBD,OAAK,EAAC7Z,KAAMD,EAAkBC,KAAM8Y,UAAWiB,KACjE,kBAAC,GAAD,CAAkBF,OAAK,EAAC7Z,KAAMD,EAAgBC,KAAM8Y,UAAWkB,KAC/D,kBAAC,GAAD,CAAkBH,OAAK,EAAC7Z,KAAMD,EAAoBC,KAAM8Y,UAAWmB,KACnE,kBAAC,GAAD,CAAkBJ,OAAK,EAAC7Z,KAAMD,EAAsBC,KAAM8Y,UAAWoB,KACrE,kBAAC,GAAD,CAAkBL,OAAK,EAAC7Z,KAAMD,EAAqBC,KAAM8Y,UAAWqB,KACpE,kBAAC,GAAD,CAAkBN,OAAK,EAAC7Z,KAAMD,EAAYC,KAAM8Y,UAAWsB,KAC3D,kBAAC,GAAD,CAAkBP,OAAK,EAAC7Z,KAAMD,EAAoBC,KAAM8Y,UAAWuB,KAGnE,kBAAC,GAAD,CAAiBR,OAAK,EAAC7Z,KAAMD,EAAcC,KAAM8Y,UAAWwB,KAC5D,kBAAC,GAAD,CAAiBT,OAAK,EAAC7Z,KAAMD,EAAcC,KAAM8Y,UAAWyB,KAC5D,kBAAC,GAAD,CAAiBV,OAAK,EAAC7Z,KAAMD,EAAgBC,KAAM8Y,UAAW0B,KAC9D,kBAAC,GAAD,CAAiBX,OAAK,EAAC7Z,KAAMD,EAAcC,KAAM8Y,UAAW2B,KAC5D,kBAAC,GAAD,CAAiBZ,OAAK,EAAC7Z,KAAMD,EAA4BC,KAAM8Y,UAAW4B,KAC1E,kBAAC,GAAD,CAAiBb,OAAK,EAAC7Z,KAAMD,EAAqBC,KAAM8Y,UAAW6B,KAGnE,kBAAC,GAAD,CAAiBd,OAAK,EAAC7Z,KAAMD,EAAgBC,KAAM8Y,UAAW8B,KAC9D,kBAAC,IAAD,CAAUvN,GAAItN,EAAgBC,WCjG9C6a,IAASzB,OACL,kBAAC,GAAD,MACFpR,SAAS8S,eAAe,U,mBCb1Bjb,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.bcb45afd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.85064a97.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-hero-logo.9394d800.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-transparent.f7d45c01.svg\";","\nexport const Routes = {\n    // dash\n    DashboardOverview: { path: \"/\" },\n    // assets list\n    AssetsList: {path: \"/assets\"},\n    // extract\n    Transactions: { path: \"/transactions\" },\n    // add addAssets\n    AddTransaction: { path: \"/adicionar\" },\n    NewInvestment: { path: \"/adicionar/novo-investimento\" },\n    ReInvestment: { path: \"/adicionar/reinvestimento\" },\n    Sale: { path: \"/adicionar/venda\" },\n    // settings\n    Settings: { path: \"/configuracoes\" },\n    // auth\n    Signin: { path: \"/login\" },\n    Signup: { path: \"/cadastrar\" },\n    ResetPassword: { path: \"/resetar-senha\" },\n    ResetPasswordConfirm: { path: \"/password/reset/confirm/:uid/:token\" },\n    Activate: { path: \"/activate/:uid/:token\" },\n    Google: { path: \"/google\" },\n    // errors\n    NotFound: { path: \"/404\" },\n    ServerError: { path: \"/500\" },\n};","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_FAIL:\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';","import {legacy_createStore as createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\n\n\n\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  }\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\n  const data = { labels, series };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\n  );\n};\n","import {Card, Col, Row} from \"@themesberg/react-bootstrap\";\nimport {CircleChart} from \"../../../components/Charts\";\nimport React, {useEffect, useState} from \"react\";\n\nexport const AlocacaoChart = () => {\n\n    const [carteira, setCarteira] = useState([])\n\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('AlocacaoChart.js', err)\n                })\n        }\n        loadData()\n    }, [])\n    const assets = carteira.map(c => c.assets)\n\n    return (\n        <Card border=\"light\" className=\"shadow-sm\">\n            <Card.Body>\n                <Row className=\"d-block d-xl-flex align-items-center\">\n                    <Col xs={12} xl={5}\n                         className=\"text-xl-center d-flex align-items-center justify-content-xl-center mb-3 mb-xl-0\">\n                        <CircleChart series={assets[0]}/>\n                    </Col>\n                    <Col xs={12} xl={7} className=\"px-xl-0\">\n                        <h5 className=\"mb-3\">Alocação</h5>\n                        {carteira.map(c =>\n                            <>\n                                {c.assets.map(a =>\n                                    <h6 key={`circle-element-${a.id}`}\n                                        className={`fw-normal text-${a.color}`}>\n                                        {a.value}% {a.label} <br/>\n                                    </h6>\n                                )}\n                            </>\n                        )}\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};","import ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport Chartist from \"react-chartist\";\nimport React from \"react\";\n\nexport default () => {\n  const data = {\n    labels: ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab', 'Dom'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\n  );\n};","import {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {Card} from \"@themesberg/react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport PerformanceChart from \"./PerformanceChart\";\n\nexport default (props) => {\n  const { title, value, percentage } = props;\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\n\n  return (\n    <Card className=\"bg-secondary-alt shadow-sm\">\n      <Card.Header className=\"d-flex flex-row align-items-center flex-0\">\n        <div className=\"d-block\">\n          <h5 className=\"fw-normal mb-2\">\n            {title}\n          </h5>\n          <h3>R$ {value}</h3>\n          <small className=\"fw-bold mt-2\">\n            <span className=\"me-2\">Desde o Início</span>\n            <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\n            <span className={percentageColor}>\n              {percentage}%\n            </span>\n          </small>\n        </div>\n        {/*<div className=\"d-flex ms-auto\">*/}\n        {/*  <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">Month</Button>*/}\n        {/*  <Button variant=\"primary\" size=\"sm\" className=\"me-3\">Week</Button>*/}\n        {/*</div>*/}\n      </Card.Header>\n      <Card.Body className=\"p-2\">\n      <PerformanceChart/>\n      </Card.Body>\n    </Card>\n  );\n};","import React, {Fragment, useEffect, useState} from \"react\";\nimport {Col, Row} from '@themesberg/react-bootstrap';\n\nimport {AlocacaoChart} from \"./AlocacaoChart\";\nimport * as PropTypes from \"prop-types\";\nimport PerformanceNumbers from \"./PerformanceNumbers\";\n\nfunction Fragmento(props) {\n    return null;\n}\n\nFragmento.propTypes = {children: PropTypes.node};\nexport default () => {\n\n    const [desempenho, setDesempenho] = useState([])\n\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/desempenho/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setDesempenho(data))\n                .catch(err => {\n                    console.log('DashboardOverview.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    const value = desempenho.value ? desempenho.value : 0\n    const percent = desempenho.percent ? desempenho.percent : 0\n\n    return (\n        <Fragment>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={6} sm={6} xl={6} className=\"mb-4 d-none d-sm-block\">\n                    <PerformanceNumbers\n                        title=\"Desempenho\"\n                        value={value}\n                        percentage={percent}\n                    />\n                </Col>\n                <Col xs={6} sm={6} xl={6} className=\"mb-12\">\n                    <AlocacaoChart/>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n};\n\n","import {Card, Table} from \"@themesberg/react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\n\nexport default () => {\n\n    const [dataResponse, setDataResponse] = useState([])\n\n    // get transactions list\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/extrato/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setDataResponse(data))\n            .catch(err => {\n                console.log('data.js', err)\n            })\n        loadData()\n    }, [])\n\n    const TableRow = (props) => {\n        const {nome, cotacao, unidades, saldo, inclusao, tipo_transacao} = props;\n        const tipoVariant = tipo_transacao === \"compra\" ? \"success\" : \"danger\"\n\n        return (\n            <tr>\n                <td>\n          <span className=\"fw-normal\">\n            {nome}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {cotacao !== '0.00' ? <>R${parseFloat(cotacao).toFixed(2)}</> : <>N/A</>}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {unidades}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            R${saldo}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {inclusao}\n          </span>\n                </td>\n                <td>\n          <span className={`fw-normal text-${tipoVariant}`}>\n            {tipo_transacao.toUpperCase()}\n          </span>\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\n            <Card.Body className=\"pt-0\">\n                <Table hover className=\"user-table align-items-center\">\n                    <thead>\n                    <tr>\n                        <th className=\"border-bottom\">Ativo</th>\n                        <th className=\"border-bottom\">Cotação</th>\n                        <th className=\"border-bottom\">Unidades</th>\n                        <th className=\"border-bottom\">Saldo</th>\n                        <th className=\"border-bottom\">Inclusão</th>\n                        <th className=\"border-bottom\">Tipo</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {dataResponse.map(d => <TableRow key={`data-${d.id}`} {...d} />)}\n                    </tbody>\n                </Table>\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-end\">\n                    <small className=\"fw-bold\">\n                        Mostrando <b>{dataResponse.length}</b> resultados\n                    </small>\n                </Card.Footer>\n            </Card.Body>\n        </Card>\n    );\n};","import React, {useState} from \"react\";\nimport {Button, Col, Row} from '@themesberg/react-bootstrap';\nimport Table from \"./Table\";\n\n\nexport default () => {\n    const [genMsg, setGenMsg] = useState(0)\n    const [dlMsg, setDlMsg] = useState(0)\n    let generateReport = async () => {\n        try {\n            let res = await fetch('http://localhost:8000/assets/exportar/',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                })\n            if (res.status === 200) {\n                setGenMsg(200);\n                setDlMsg(0)\n            } else {\n                setGenMsg(500)\n            }\n        } catch (err) {\n            setGenMsg(403)\n        }\n    }\n    let downloadReport = async () => {\n        try {\n            let res = await fetch('http://localhost:8000/assets/baixar/',\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/vnd.ms-excel'\n                    },\n                })\n                .then((response) => response.blob())\n                .then((blob) => {\n                    // Create blob link to download\n                    const url = window.URL.createObjectURL(\n                        new Blob([blob])\n                    );\n                    const link = document.createElement('a');\n                    link.href = url\n                    link.setAttribute(\n                        'download',\n                        `relatorio-extrato-${new Date().toLocaleDateString('pt-br')}.xlsx`\n                    );\n                    // Append to html link element page\n                    document.body.appendChild(link);\n                    // Start download\n                    link.click()\n                    // Clean up and remove the link\n                    link.parentNode.removeChild(link)\n                });\n            if (res.status === 200) {\n                setDlMsg(200);\n                setGenMsg(0)\n            } else {\n                setDlMsg(500)\n            }\n        } catch (err) {\n            setDlMsg(403)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n                <div className=\"d-block mb-4 mb-md-0\">\n                    <h4>Extrato</h4>\n                    <p className=\"mb-0\">Consulte seu extrato para recordar ou editar seus investimentos.</p>\n                </div>\n            </div>\n\n            <div className=\"table-settings mb-4\">\n                <Row className=\"justify-content-between align-items-center\">\n                    {/*<Col xs={8} md={8} lg={8} xl={4}>*/}\n                    {/*  <InputGroup>*/}\n                    {/*    <InputGroup.Text>*/}\n                    {/*      <FontAwesomeIcon icon={faSearch} />*/}\n                    {/*    </InputGroup.Text>*/}\n                    {/*    <Form.Control type=\"text\" placeholder=\"Search\" />*/}\n                    {/*  </InputGroup>*/}\n                    {/*</Col>*/}\n                    <Col className=\"text-end\">\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={generateReport}>\n                            Gerar Relatório\n                        </Button>\n                    </Col>\n                </Row>\n                <div className=\"genMsg pt-2 text-center\">\n                    {\n                        genMsg === 200 ?\n                            <>\n                                <p className=\"text-success\">Relatório gerado com sucesso! Clique para baixar</p>\n                            </>\n                            : null\n                    }\n                    {\n                        dlMsg === 200 ?\n                            <p className=\"text-success\">Relatório baixado com sucesso!</p>\n                            : null\n                    }\n                    {\n                        genMsg === 200 || dlMsg === 200 ?\n                            <Button variant=\"success\" size=\"sm\" onClick={downloadReport}>Baixar</Button>\n                            : null\n                    }\n                </div>\n            </div>\n            <Table/>\n        </>\n    );\n};\n","import React, {useState} from 'react';\nimport {Modal, Button, Form, Row, Col} from '@themesberg/react-bootstrap';\n\n\nexport const EditName = (props) => {\n\n    const [firstName, setFirstName] = useState('');\n    const [message, setMessage] = useState('');\n\n    // post form\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/api/user/change/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        firstName: firstName,\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Nome alterado com sucesso!</p>);\n                setTimeout(() => {\n                        window.location.reload()\n                    }, 1000\n                )\n\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal as={Modal.Dialog} centered show={props.show} onHide={props.close} id=\"modal-firstName\">\n                <Modal.Header>\n                    <Modal.Title className=\"h6\">Alterar Nome</Modal.Title>\n                    <Button variant=\"close\" aria-label=\"Close\" onClick={props.close}/>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Row>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"firstName\">\n                                    <Form.Control\n                                        required\n                                        type=\"text\"\n                                        placeholder=\"Nome\"\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" type=\"submit\">\n                                Salvar\n                            </Button>\n                            <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={props.close}>\n                                Cancelar\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport const EditLastName = (props) => {\n\n    const [lastName, setLastName] = useState('');\n    const [message, setMessage] = useState('');\n\n    // post form\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/api/user/change/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        lastName: lastName,\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Sobrenome alterado com sucesso!</p>);\n                setTimeout(() => {\n                        window.location.reload()\n                    }, 1000\n                )\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal as={Modal.Dialog} centered show={props.show} onHide={props.close} id=\"modal-lastName\">\n                <Modal.Header>\n                    <Modal.Title className=\"h6\">Alterar Sobrenome</Modal.Title>\n                    <Button variant=\"close\" aria-label=\"Close\" onClick={props.close}/>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Row>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"lastName\">\n                                    <Form.Control\n                                        required\n                                        type=\"text\"\n                                        placeholder=\"Sobrenome\"\n                                        onChange={(e) => setLastName(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" type=\"submit\">\n                                Salvar\n                            </Button>\n                            <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={props.close}>\n                                Cancelar\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport const EditEmail = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    // post form\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/api/user/change/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        email: email,\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Email alterado com sucesso!</p>);\n                setTimeout(() => {\n                        window.location.reload()\n                    }, 1000\n                )\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal as={Modal.Dialog} centered show={props.show} onHide={props.close} id=\"modal-email\">\n                <Modal.Header>\n                    <Modal.Title className=\"h6\">Alterar Email</Modal.Title>\n                    <Button variant=\"close\" aria-label=\"Close\" onClick={props.close}/>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Row>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"firstName\">\n                                    <Form.Control\n                                        required\n                                        type=\"text\"\n                                        placeholder=\"alterar@email.com\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" type=\"submit\">\n                                Salvar\n                            </Button>\n                            <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={props.close}>\n                                Cancelar\n                            </Button>\n                        </Modal.Footer>\n                    </Form>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n","import React, {useEffect, useState} from \"react\";\nimport {Col, Row, Card, Form, Button} from '@themesberg/react-bootstrap';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {EditEmail, EditLastName, EditName} from \"./ProfileModal\";\n\n\nexport const GeneralInfoForm = () => {\n\n    // user info\n    const [userLogged, setUserLogged] = useState(\"\");\n    let firstName = userLogged.first_name\n    let lastName = userLogged.last_name\n    let email = userLogged.email\n\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/api/user/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setUserLogged(data))\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n        loadData()\n    }, [])\n\n    // modal\n    const [openModalName, setOpenModalName] = useState(false)\n    const [openModalLastName, setOpenModalLastName] = useState(false)\n    const [openModalEmail, setOpenModalEmail] = useState(false)\n\n    return (\n        <>\n            <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n                <Card.Body>\n                    <h5 className=\"mb-4\">Dados da Conta</h5>\n                    <Form>\n                        <Row>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"firstName\">\n                                    <Form.Label>Primeiro Nome</Form.Label>\n                                    <Form.Control required type=\"text\" value={firstName} readOnly/>\n                                </Form.Group>\n                            </Col>\n                            <Col md={1} className=\"pt-5\">\n                                <a onClick={() => {\n                                    setOpenModalName(true)\n                                }}\n                                >\n                                    <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\n                                </a>\n                            </Col>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"lastName\">\n                                    <Form.Label>Último Nome</Form.Label>\n                                    <Form.Control required type=\"text\" value={lastName} readOnly/>\n                                </Form.Group>\n                            </Col>\n                            <Col md={1} className=\"pt-5\">\n                                <a onClick={() => {\n                                    setOpenModalLastName(true)\n                                }}\n                                >\n                                    <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\n                                </a>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={11} className=\"mb-3\">\n                                <Form.Group id=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control required type=\"email\" value={email} readOnly/>\n                                </Form.Group>\n                            </Col>\n                            <Col md={1} className=\"pt-5\">\n                                <a onClick={() => {\n                                    setOpenModalEmail(true)\n                                }}\n                                >\n                                    <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\n                                </a>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <EditName\n                show={openModalName}\n                close={() => {setOpenModalName(false)}}\n            />\n            <EditLastName\n                show={openModalLastName}\n                close={() => {setOpenModalLastName(false)}}\n            />\n            <EditEmail\n                show={openModalEmail}\n                close={() => {setOpenModalEmail(false)}}\n            />\n        </>\n    )\n};\n","import React from \"react\";\nimport {Col, Row} from '@themesberg/react-bootstrap';\nimport {GeneralInfoForm} from \"../components/Forms\";\n\n\n\nexport default () => {\n    return (\n        <>\n            <Row>\n                <Col xs={12} xl={12}>\n                    <GeneralInfoForm/>\n                </Col>\n            </Row>\n        </>\n    );\n};\n","import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    LOGOUT\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const googleAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\n\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            });\n        }\n    }\n};\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({token: localStorage.getItem('access')});\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({email, password});\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({first_name, last_name, email, password, re_password});\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({uid, token});\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({email});\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({uid, token, new_password, re_new_password});\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEnvelope, faUnlockAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons\";\nimport {Col, Row, Form, Card, Button, FormCheck, Container, InputGroup} from '@themesberg/react-bootstrap';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Routes} from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nimport {login} from \"../../actions/auth\";\n\n\nconst Login = ({login, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const {email, password} = formData\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = e => {\n        e.preventDefault()\n        login(email, password)\n    }\n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to={Routes.DashboardOverview.path}/>\n    }\n\n    return (\n        <main>\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n                <Container>\n                    <Row className=\"justify-content-center form-bg-image\" style={{backgroundImage: `url(${BgImage})`}}>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    <h3 className=\"mb-0\">Sign in to Voltage</h3>\n                                </div>\n                                <Form className=\"mt-4\" onSubmit={e => onSubmit(e)}>\n                                    <Form.Group id=\"email\" className=\"mb-4\">\n                                        <Form.Label>Your Email</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faEnvelope}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                autoFocus\n                                                required\n                                                type=\"email\"\n                                                placeholder=\"example@company.com\"\n                                                name='email'\n                                                value={email}\n                                                onChange={e => onChange(e)}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Group id=\"password\" className=\"mb-4\">\n                                            <Form.Label>Your Password</Form.Label>\n                                            <InputGroup>\n                                                <InputGroup.Text>\n                                                    <FontAwesomeIcon icon={faUnlockAlt}/>\n                                                </InputGroup.Text>\n                                                <Form.Control\n                                                    required\n                                                    type=\"password\"\n                                                    placeholder=\"Password@123\"\n                                                    name='password'\n                                                    value={password}\n                                                    onChange={e => onChange(e)}\n                                                    minLength='6'\n                                                />\n                                            </InputGroup>\n                                        </Form.Group>\n                                        <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                                            <Form.Check type=\"checkbox\">\n                                                <FormCheck.Input id=\"defaultCheck5\" className=\"me-2\"/>\n                                                <FormCheck.Label htmlFor=\"defaultCheck5\" className=\"mb-0\">Remember\n                                                    me</FormCheck.Label>\n                                            </Form.Check>\n                                            <Card.Link as={Link} to={Routes.ResetPassword.path}\n                                                       className=\"small text-end\">Lost password?</Card.Link>\n                                        </div>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                                        Sign in\n                                    </Button>\n                                </Form>\n\n                                <div className=\"mt-3 mb-4 text-center\">\n                                    <span className=\"fw-normal\">or login with</span>\n                                </div>\n                                <div className=\"d-flex justify-content-center my-4\">\n                                    <Button variant=\"outline-light\"\n                                            className=\"btn-icon-only btn-pill text-twitter me-2\"\n                                            onClick={continueWithGoogle}>\n                                        <FontAwesomeIcon icon={faGoogle}/>\n                                    </Button>\n                                </div>\n                                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                  <span className=\"fw-normal\">\n                    Not registered?\n                    <Card.Link as={Link} to={Routes.Signup.path} className=\"fw-bold\">\n                      {` Create account `}\n                    </Card.Link>\n                  </span>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {login})(Login)\n","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEnvelope, faUnlockAlt, faPen, faAngleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons\";\nimport {Col, Row, Form, Card, Button, Container, InputGroup} from '@themesberg/react-bootstrap';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {Routes} from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nimport {signup} from \"../../actions/auth\";\n\n\nconst Signup = ({signup, isAuthenticated}) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    const {first_name, last_name, email, password, re_password} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(first_name, last_name, email, password, re_password);\n            setAccountCreated(true);\n        }\n    };\n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/'/>\n    }\n    if (accountCreated) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <main>\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n                <Container>\n                    <Row className=\"justify-content-center form-bg-image\" style={{backgroundImage: `url(${BgImage})`}}>\n                        <p className=\"text-center\">\n                            <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\n                                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\"/> Back to sign in\n                            </Card.Link>\n                        </p>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    <h3 className=\"mb-0\">Sign up to Voltage</h3>\n                                </div>\n                                <Form className=\"mt-4\" onSubmit={e => onSubmit(e)}>\n                                    <Form.Group id=\"first_name\" className=\"mb-4\">\n                                        <Form.Label>First Name</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faPen}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                autoFocus\n                                                required\n                                                type=\"text\"\n                                                placeholder=\"Fulano\"\n                                                name='first_name'\n                                                value={first_name}\n                                                onChange={e => onChange(e)}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"last_name\" className=\"mb-4\">\n                                        <Form.Label>Last Name</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faPen}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                autoFocus\n                                                required\n                                                type=\"text\"\n                                                placeholder=\"Silva\"\n                                                name='last_name'\n                                                value={last_name}\n                                                onChange={e => onChange(e)}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"email\" className=\"mb-4\">\n                                        <Form.Label>Email</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faEnvelope}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                autoFocus\n                                                required\n                                                type=\"email\"\n                                                placeholder=\"example@company.com\"\n                                                name='email'\n                                                value={email}\n                                                onChange={e => onChange(e)}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"password\" className=\"mb-4\">\n                                        <Form.Label>Password</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faUnlockAlt}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                required\n                                                type=\"password\"\n                                                placeholder=\"Password@123\"\n                                                name='password'\n                                                value={password}\n                                                onChange={e => onChange(e)}\n                                                minLength='6'\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"re_password\" className=\"mb-4\">\n                                        <Form.Label>Confirm Password</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faUnlockAlt}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                required\n                                                type=\"password\"\n                                                placeholder=\"Password@123\"\n                                                name='re_password'\n                                                value={re_password}\n                                                onChange={e => onChange(e)}\n                                                minLength='6'\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                                        Register\n                                    </Button>\n                                </Form>\n                                <div className=\"mt-3 mb-4 text-center\">\n                                    <span className=\"fw-normal\">or login with</span>\n                                </div>\n                                <div className=\"d-flex justify-content-center my-4\">\n                                    <Button variant=\"outline-light\"\n                                            className=\"btn-icon-only btn-pill text-twitter me-2\"\n                                            onClick={continueWithGoogle}>\n                                        <FontAwesomeIcon icon={faGoogle}/>\n                                    </Button>\n                                </div>\n                                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {signup})(Signup)\n","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft, faUnlockAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {Col, Row, Form, Card, Button, Container, InputGroup} from '@themesberg/react-bootstrap';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Routes} from \"../../routes\";\nimport {reset_password_confirm} from \"../../actions/auth\";\n\n\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const {new_password, re_new_password} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid\n        const token = match.params.token\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <main>\n            <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <p className=\"text-center\">\n                            <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\n                                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\"/> Back to sign in\n                            </Card.Link>\n                        </p>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                                <h3 className=\"mb-4\">Reset password</h3>\n                                <Form onSubmit={e => onSubmit(e)}>\n                                    <Form.Group id=\"password_confirm\" className=\"mb-4\">\n                                        <Form.Label>New Password</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faUnlockAlt}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                required\n                                                type=\"password\"\n                                                placeholder=\"New Password\"\n                                                name='new_password'\n                                                value={new_password}\n                                                onChange={e => onChange(e)}\n                                                minLength='6'\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"re_password_confirm\" className=\"mb-4\">\n                                        <Form.Label>Confirm Password</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faUnlockAlt}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                required\n                                                type=\"password\"\n                                                placeholder=\"Confirm Password\"\n                                                name='re_new_password'\n                                                value={re_new_password}\n                                                onChange={e => onChange(e)}\n                                                minLength='6'\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                                        Reset password\n                                    </Button>\n                                </Form>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n};\n\nexport default connect(null, {reset_password_confirm})(ResetPasswordConfirm)","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft, faEnvelope} from \"@fortawesome/free-solid-svg-icons\";\nimport {Col, Row, Form, Card, Button, Container, InputGroup} from '@themesberg/react-bootstrap';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Routes} from \"../../routes\";\nimport {reset_password} from \"../../actions/auth\";\n\n\nconst ResetPassword = ({reset_password}) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const {email} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <main>\n            <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <p className=\"text-center\">\n                            <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\n                                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\"/> Back to sign in\n                            </Card.Link>\n                        </p>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                                <h3 className=\"mb-4\">Reset password</h3>\n                                <Form onSubmit={e => onSubmit(e)}>\n                                    <Form.Group id=\"email\" className=\"mb-4\">\n                                        <Form.Label>Your Email</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faEnvelope}/>\n                                            </InputGroup.Text>\n                                            <Form.Control\n                                                required\n                                                type=\"email\"\n                                                placeholder=\"example@company.com\"\n                                                name='email'\n                                                value={email}\n                                                onChange={e => onChange(e)}\n                                            />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                                        Reset password\n                                    </Button>\n                                </Form>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n};\n\nexport default connect(null, {reset_password})(ResetPassword)","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Card, Image, Button, Container } from '@themesberg/react-bootstrap';\n\nimport { Link } from 'react-router-dom';\n\nimport { Routes } from \"../../routes\";\nimport NotFoundImage from \"../../assets/img/illustrations/404.svg\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\n        <Container>\n          <Row>\n            <Col xs={12} className=\"text-center d-flex align-items-center justify-content-center\">\n              <div>\n                <Card.Link as={Link} to={Routes.DashboardOverview.path}>\n                  <Image src={NotFoundImage} className=\"img-fluid w-75\" />\n                </Card.Link>\n                <h1 className=\"text-primary mt-5\">\n                  Page not <span className=\"fw-bolder\">found</span>\n                </h1>\n                <p className=\"lead my-4\">\n                  Oops! Looks like you followed a bad link. If you think this is a\n                  problem with us, please tell us.\n            </p>\n                <Button as={Link} variant=\"primary\" className=\"animate-hover\" to={Routes.DashboardOverview.path}>\n                  <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\n                  Go back home\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","import React, {useState} from \"react\";\nimport {Button, Col, Container} from '@themesberg/react-bootstrap';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {verify} from \"../../actions/auth\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\n\n\nconst Activate = ({verify, match}) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <main>\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5 justify-content-center \" style={{backgroundImage: `url(${BgImage})`}}>\n                <Container>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    <h3 className=\"mb-0\">Welcome to Voltage!</h3>\n                                    <p>Click on button below to verify your account and login</p>\n                                </div>\n                                <Button variant=\"primary\" type=\"button\" className=\"w-100 h-100\"\n                                        onClick={verify_account}>\n                                    Verify Your Account\n                                </Button>\n                            </div>\n                        </Col>\n                </Container>\n            </section>\n        </main>\n\n\n    );\n};\n\n\nexport default connect(null, {verify})(Activate)\n","import React, {useEffect} from 'react';\nimport {Redirect, useLocation} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {googleAuthenticate} from \"../../actions/auth\";\nimport queryString from 'query-string'\n\nconst Google = ({googleAuthenticate}) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        if (state && code) {\n            googleAuthenticate(state, code);\n        }\n    }, [location]);\n\n    return (\n        <Redirect to='/'></Redirect>\n    );\n};\n\nexport default connect(null, {googleAuthenticate})(Google);","import React, {useState} from \"react\";\nimport SimpleBar from 'simplebar-react';\nimport {Link, useLocation} from \"react-router-dom\";\nimport {CSSTransition} from 'react-transition-group';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faChartPie, faHandHoldingUsd, faList, faPlus, faSignOutAlt, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {Accordion, Badge, Button, Image, Nav, Navbar} from '@themesberg/react-bootstrap';\n\nimport {Routes} from \"../../routes\";\nimport ReactHero from \"../../assets/img/technologies/react-hero-logo.svg\";\nimport {faUserCircle} from \"@fortawesome/free-regular-svg-icons\";\n\nexport default (props = {}) => {\n    const location = useLocation();\n    const {pathname} = location;\n    const [show, setShow] = useState(false);\n    const showClass = show ? \"show\" : \"\";\n\n    const onCollapse = () => setShow(!show);\n\n    const CollapsableNavItem = (props) => {\n        const {eventKey, title, icon, children = null} = props;\n        const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\n\n        return (\n            <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\n                <Accordion.Item eventKey={eventKey}>\n                    <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\n            <span>\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon}/> </span>\n              <span className=\"sidebar-text\">{title}</span>\n            </span>\n                    </Accordion.Button>\n                    <Accordion.Body className=\"multi-level\">\n                        <Nav className=\"flex-column\">\n                            {children}\n                        </Nav>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        );\n    };\n\n    const NavItem = (props) => {\n        const {\n            title,\n            link,\n            external,\n            target,\n            icon,\n            image,\n            badgeText,\n            badgeBg = \"secondary\",\n            badgeColor = \"primary\"\n        } = props;\n        const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\n        const navItemClassName = link === pathname ? \"active\" : \"\";\n        const linkProps = external ? {href: link} : {as: Link, to: link};\n\n        return (\n            <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\n                <Nav.Link {...linkProps} target={target} className={classNames}>\n          <span>\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon}/> </span> : null}\n              {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\"/> : null}\n\n              <span className=\"sidebar-text\">{title}</span>\n          </span>\n                    {badgeText ? (\n                        <Badge pill bg={badgeBg} text={badgeColor}\n                               className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\n                    ) : null}\n                </Nav.Link>\n            </Nav.Item>\n        );\n    };\n\n    return (\n        <>\n            <Navbar expand={false} collapseOnSelect variant=\"dark\" className=\"navbar-theme-primary px-4 d-md-none\">\n                <Navbar.Brand className=\"me-lg-5\" as={Link} to={Routes.DashboardOverview.path}>\n                    <Image src={ReactHero} className=\"navbar-brand-light\"/>\n                </Navbar.Brand>\n                <Navbar.Toggle as={Button} aria-controls=\"main-navbar\" onClick={onCollapse}>\n                    <span className=\"navbar-toggler-icon\"/>\n                </Navbar.Toggle>\n            </Navbar>\n            <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\n                <SimpleBar className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}>\n                    <div className=\"sidebar-inner px-4 pt-3\">\n                        <div\n                            className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\n                            <div className=\"d-flex align-items-center\">\n                                <div className=\"d-block\">\n                                    <h6>Hi, Jane</h6>\n                                    <Button as={Link} variant=\"secondary\" size=\"xs\" to={Routes.Signin.path}\n                                            className=\"text-dark\">\n                                        <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\"/> Sign Out\n                                    </Button>\n                                </div>\n                            </div>\n                            <Nav.Link className=\"collapse-close d-md-none\" onClick={onCollapse}>\n                                <FontAwesomeIcon icon={faTimes}/>\n                            </Nav.Link>\n                        </div>\n                        <Nav className=\"flex-column pt-3 pt-md-0\">\n                            <NavItem title=\"Resumo\" icon={faChartPie} link={Routes.DashboardOverview.path}/>\n                            <NavItem title=\"Ativos\" icon={faHandHoldingUsd} link={Routes.AssetsList.path}/>\n                            <NavItem title=\"Extrato\" icon={faList} link={Routes.Transactions.path}/>\n                            <NavItem title=\"Adicionar\" icon={faPlus} link={Routes.AddTransaction.path}/>\n                            <NavItem title=\"Perfil\" icon={faUserCircle} link={Routes.Settings.path}/>\n                        </Nav>\n                    </div>\n                </SimpleBar>\n            </CSSTransition>\n        </>\n    );\n};\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {Nav, Navbar, Dropdown, Container} from '@themesberg/react-bootstrap';\nimport {logout} from \"../actions/auth\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nconst NavBar = ({logout}) => {\n\n    const [userLogged, setUserLogged] = useState([])\n    const [carteira, setCarteira] = useState([])\n\n    useEffect(() => {\n        const loadData = () => {\n            // api for auth\n            fetch('http://localhost:8000/api/user/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setUserLogged(data))\n                .catch(err => {\n                    console.log('Navbar.js - Auth', err)\n                })\n            // api for get total value\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('Navbar.js - Carteira', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    const [redirect, setRedirect] = useState(false)\n    const logout_user = () => {\n        logout();\n        setRedirect(true)\n    };\n\n    const totalCarteira = carteira.map(c => c.valor_total)\n\n    return (\n        <Fragment>\n            <Navbar className=\"ps-0 pe-2 pb-0\">\n                <Container fluid className=\"px-0\">\n                    <div className=\"d-flex justify-content-between w-100\">\n                        <div className=\"d-flex align-items-start\">\n                            <Nav className=\"align-items-center\">Total:&nbsp;<b>R$ {totalCarteira}</b></Nav>\n                        </div>\n                        <Nav className=\"align-items-center\">\n                            <Dropdown as={Nav.Item}>\n                                <Dropdown.Toggle as={Nav.Link} className=\"pt-1 px-0\">\n                                    <div className=\"media d-flex align-items-center\">\n                                            <span\n                                                className=\"mb-0 font-small fw-bold\">{userLogged.first_name} {userLogged.last_name}</span>\n                                    </div>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"user-dropdown dropdown-menu-right mt-2\">\n                                    <Dropdown.Item className=\"fw-bold\" onClick={logout_user}>\n                                        <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\"/> Logout\n                                    </Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav>\n                    </div>\n                </Container>\n            </Navbar>\n            {redirect ? <Redirect to='/login'/> : null}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {logout})(NavBar)","\nimport React from \"react\";\nimport moment from \"moment-timezone\";\nimport { Row, Col, Card } from '@themesberg/react-bootstrap';\n\nexport default (props) => {\n  const currentYear = moment().get(\"year\");\n\n\n  return (\n    <div>\n      <footer className=\"footer section py-5\">\n        <Row>\n          <Col xs={12} lg={6} className=\"mb-4 mb-lg-0\">\n            <p className=\"mb-0 text-center text-xl-left\">\n              Copyright © 2019-{`${currentYear} `}\n              <Card.Link href=\"https://www.jorgemustafa.com.br\" target=\"_blank\" className=\"text-blue text-decoration-none fw-normal\">\n                Jorge Mustafa Web Development\n              </Card.Link>\n            </p>\n          </Col>\n          <Col xs={12} lg={6}>\n            <ul className=\"list-inline list-group-flush list-group-borderless text-center text-xl-right mb-0\">\n              <li className=\"list-inline-item px-0 px-sm-2\">\n                <Card.Link href=\"https://themesberg.com/about\" target=\"_blank\">\n                  About\n                </Card.Link>\n              </li>\n              <li className=\"list-inline-item px-0 px-sm-2\">\n                <Card.Link href=\"https://themesberg.com/themes\" target=\"_blank\">\n                  Themes\n                </Card.Link>\n              </li>\n              <li className=\"list-inline-item px-0 px-sm-2\">\n                <Card.Link href=\"https://themesberg.com/blog\" target=\"_blank\">\n                  Blog\n                </Card.Link>\n              </li>\n              <li className=\"list-inline-item px-0 px-sm-2\">\n                <Card.Link href=\"https://themesberg.com/contact\" target=\"_blank\">\n                  Contact\n                </Card.Link>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </footer>\n    </div>\n  );\n};\n","\nimport React from 'react';\nimport { Image } from '@themesberg/react-bootstrap';\n\nimport ReactLogo from \"../assets/img/technologies/react-logo-transparent.svg\";\n\nexport default (props) => {\n\n  const { show } = props;\n\n  return (\n    <div className={`preloader bg-soft flex-column justify-content-center align-items-center ${show ? \"\" : \"show\"}`}>\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Button, Col, Container, Row} from '@themesberg/react-bootstrap';\n\nimport BgImage from \"../../../assets/img/illustrations/signin.svg\"\nimport {Link} from \"react-router-dom\";\nimport {Routes} from \"../../../routes\";\n\nexport default () => {\n    return (\n        <main>\n            <section className=\"h-100 bg-soft d-flex align-items-center my-4\">\n                <Container>\n                    <Row className=\"justify-content-center\" style={{backgroundImage: `url(${BgImage})`}}>\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border border-light rounded p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    <h3 className=\"mb-3\">Nova transação</h3>\n                                </div>\n                                <Button as={Link} to={Routes.NewInvestment.path} variant=\"primary\"\n                                        className=\"w-100 mb-2\">Novo Investimento</Button>\n                                <Button as={Link} to={Routes.ReInvestment.path} variant=\"primary\"\n                                        className=\"w-100 mb-2\">Reinvestimento</Button>\n                                <Button as={Link} to={Routes.Sale.path} variant=\"primary\" className=\"w-100 mb-2\">Nova\n                                    Venda</Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n};\n","import React, {useEffect, useState} from \"react\"\nimport {Button, Col, Form, FormLabel, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from \"react-currency-input-field\";\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset, venda = false}) => {\n    // if asset, the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const [nome, setNome] = useState(asset);\n    const [cotacao, setCotacao] = useState('');\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [unidades, setUnidades] = useState('');\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('');\n    const [message, setMessage] = useState('');\n    const [listaAtivos, setListaAtivos] = useState([]);\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('AcaoFiiForm.js', err)\n                })\n        }\n        loadData()\n    }, []);\n\n\n    // get assets b3\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/b3/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setListaAtivos(data))\n            .catch(err => {\n                console.log('AcaoFiiForm.js', err)\n            })\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/acaofii/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        cotacao: cotacao,\n                        data_operacao: dataStrf(dataOperacao),\n                        unidades: unidades,\n                        taxa: taxa,\n                        carteira: carteira[0].id,\n                        venda: venda\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">\n                    {venda ? 'Venda realizada com sucesso' : 'Ativo cadastrado com sucesso!'}\n                </p>);\n                // clean fields\n                setNome('Ticker do ativo');\n                setDataOperacao(new Date());\n                setCotacao('');\n                setUnidades('');\n                setTaxa('');\n            }\n            // not working --> test\n            else if (res.status === 400) {\n                setMessage(<p className=\"text-success text-center\">\n                    Venda é maior que total de ações\n                </p>);\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"nome\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Select\n                                autoFocus\n                                required\n                                type=\"text\"\n                                name=\"nome\"\n                                value={nome}\n                                onChange={(e) => setNome(e.target.value)}\n                                hidden={nomeHide}\n                            >\n                                <option className=\"fw-bold\" key=\"\" value=\"\">\n                                    Ticker do ativo\n                                </option>\n                                {listaAtivos.map(ativo =>\n                                    <option className=\"fw-bold\" value={ativo.id}>\n                                        {ativo.nome}\n                                    </option>\n                                )}\n                            </Form.Select>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"data_operacao\" className=\"mb-4\">\n                        <FormLabel className=\"data_operacao\"> Data da Operação\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={dataOperacao}\n                                    onChange={(data) => setDataOperacao(data)}\n                                />\n                            </InputGroup>\n                        </FormLabel>\n                    </Form.Group>\n                    <Form.Group id=\"cotacao\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"cotacao\"\n                                defaultValue={cotacao}\n                                placeholder=\"Cotação\"\n                                decimalsLimit={2}\n                                prefix=\"R$\"\n                                onChange={(e) => setCotacao(e.target.value.replace('R$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"unidades\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"number\"\n                                placeholder=\"Unidades\"\n                                name=\"unidades\"\n                                value={unidades}\n                                prefix=\"R$\"\n                                onChange={(e) => setUnidades(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">R$ {(unidades * cotacao).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Col, Form, FormLabel, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from 'react-currency-input-field';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset, venda = false}) => {\n\n    //     // if asset the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const [nome, setNome] = useState(asset);\n    const [cotacao, setCotacao] = useState('');\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [unidades, setUnidades] = useState('');\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('')\n    const [message, setMessage] = useState('');\n    const [listaAtivos, setListaAtivos] = useState([]);\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('AcaoAmForm.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    // get assets b3\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/am/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setListaAtivos(data))\n            .catch(err => {\n                console.log('AcaoAmForm.js', err)\n            })\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/acaoam/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        cotacao: cotacao,\n                        data_operacao: dataStrf(dataOperacao),\n                        unidades: unidades,\n                        taxa: taxa,\n                        carteira: carteira[0].id,\n                        venda: venda\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">\n                    {venda ? 'Venda realizada com sucesso' : 'Ativo cadastrado com sucesso!'}\n                </p>);\n                // clean fields\n                setNome('Ticker do ativo')\n                setDataOperacao(new Date())\n                setCotacao('')\n                setUnidades('')\n                setTaxa('')\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"nome\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Select\n                                autoFocus\n                                required\n                                type=\"text\"\n                                name=\"nome\"\n                                value={nome}\n                                onChange={(e) => setNome(e.target.value)}\n                                hidden={nomeHide}\n                            >\n                                <option className=\"fw-bold\" key=\"\" value=\"\">\n                                    Ticker do ativo\n                                </option>\n                                {listaAtivos.map(ativo =>\n                                    <option className=\"fw-bold\" value={ativo.id}>\n                                        {ativo.nome}\n                                    </option>\n                                )}\n                            </Form.Select>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"data_operacao\" className=\"mb-4\">\n                        <FormLabel className=\"data_operacao\"> Data da Operação\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={dataOperacao}\n                                    onChange={(data) => setDataOperacao(data)}\n                                />\n                            </InputGroup>\n                        </FormLabel>\n                    </Form.Group>\n                    <Form.Group id=\"cotacao\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"cotacao\"\n                                defaultValue={cotacao}\n                                placeholder=\"Cotação (em dolár)\"\n                                decimalsLimit={2}\n                                prefix=\"$\"\n                                onChange={(e) => setCotacao(e.target.value.replace('$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"unidades\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"number\"\n                                placeholder=\"Unidades\"\n                                name=\"unidades\"\n                                value={unidades}\n                                onChange={(e) => setUnidades(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                prefix=\"$\"\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">$ {(unidades * cotacao).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? message : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Col, Form, FormLabel, FormSelect, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from 'react-currency-input-field';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset}) => {\n\n    // if asset the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const produtos = [\n        {name: 'Selecione um Produto', value: ''},\n        {name: 'CDB', value: 'cdb'},\n        {name: 'RDB', value: 'rdb'},\n        {name: 'LC', value: 'lc'},\n        {name: 'LCI', value: 'lci'},\n        {name: 'LCA', value: 'lca'},\n        {name: 'LIG', value: 'lig'},\n        {name: 'CPR', value: 'cpr'},\n        {name: 'CRI', value: 'cri'},\n        {name: 'CRA', value: 'cra'}\n    ]\n\n    const tipoAplicacoes = [\n        {name: 'Selecione a Aplicação', value: ''},\n        {name: 'PRÉ', value: 'pre'},\n        {name: 'CDI', value: 'cdi'},\n        {name: 'CDI+', value: 'cdi+'},\n        {name: 'IPCA+', value: 'ipca+'},\n        {name: 'SELIC', value: 'selic'},\n        {name: 'SELIC+', value: 'selic+'},\n        {name: 'IGPM+', value: 'igpm+'},\n        {name: 'IGPDI+', value: 'igpdi+'}\n    ]\n\n    const [nome, setNome] = useState(asset);\n    const [emissor, setEmissor] = useState('');\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [valorInvestido, setValorInvestido] = useState('');\n    const [tipoAplicacao, setTipoAplicacao] = useState('');\n    const [rentabilidade, setRentabilidade] = useState('')\n    const [vencimento, setVencimento] = useState();\n    const [liquidez, setLiquidez] = useState('');\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('')\n    const [message, setMessage] = useState('');\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('RendaFixaForm.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/fixa/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        emissor: emissor,\n                        data_operacao: dataStrf(dataOperacao),\n                        valor_investido: valorInvestido,\n                        tipo_aplicacao: tipoAplicacao,\n                        vencimento: dataStrf(vencimento),\n                        rentabilidade: rentabilidade,\n                        liquidez: liquidez,\n                        taxa: taxa,\n                        carteira: carteira[0].id\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Ativo cadastrado com sucesso!</p>);\n                // clean fields\n                setNome('')\n                setEmissor('')\n                setDataOperacao(new Date())\n                setValorInvestido('')\n                setTipoAplicacao('')\n                setRentabilidade('')\n                setVencimento()\n                setLiquidez('')\n                setTaxa('')\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    {nomeHide ?\n                        <Form.Group id=\"nome\">\n                            <InputGroup>\n                                <Form.Control\n                                    autoFocus\n                                    required\n                                    type=\"text\"\n                                    name=\"nome\"\n                                    value={nome}\n                                    onChange={(e) => setNome(e.target.value)}\n                                    hidden={true}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        :\n                        <Form.Group id=\"nome\" className=\"mb-4\">\n                            <InputGroup>\n                                <FormSelect\n                                    autoFocus\n                                    required\n                                    name=\"nome\"\n                                    value={nome}\n                                    onChange={(e) => setNome(e.target.value)}\n                                >\n                                    {produtos.map(produto =>\n                                        <option className=\"fw-bold\" key={produto.value} value={produto.value}>\n                                            {produto.name}\n                                        </option>\n                                    )}\n                                </FormSelect>\n                            </InputGroup>\n                        </Form.Group>\n                    }\n                    <Form.Group id=\"emissor\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"Banco Emissor\"\n                                name=\"emissor\"\n                                value={emissor}\n                                onChange={(e) => setEmissor(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"data_operacao\" className=\"mb-4\">\n                        <FormLabel className=\"data_operacao\"> Data da Operação\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={dataOperacao}\n                                    onChange={(data) => setDataOperacao(data)}\n                                />\n                            </InputGroup>\n                        </FormLabel>\n                    </Form.Group>\n                    <Form.Group id=\"valor_investido\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"valorInvestido\"\n                                defaultValue={valorInvestido}\n                                placeholder=\"Valor Investido\"\n                                decimalsLimit={2}\n                                prefix=\"R$\"\n                                value={valorInvestido}\n                                onChange={(e) => setValorInvestido(e.target.value.replace('R$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"tipo_aplicacao\" className=\"mb-4\">\n                        <InputGroup>\n                            <FormSelect\n                                autoFocus\n                                required\n                                name=\"tipo_aplicacao\"\n                                placeholder=\"Tipo de Aplicação\"\n                                value={tipoAplicacao}\n                                onChange={(e) => setTipoAplicacao(e.target.value)}\n                            >\n                                {tipoAplicacoes.map(tipo =>\n                                    <option className=\"fw-bold\" key={tipo.value} value={tipo.value}>\n                                        {tipo.name}\n                                    </option>\n                                )}\n                            </FormSelect>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"rentabilidade\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"rentabilidade\"\n                                defaultValue={rentabilidade}\n                                placeholder=\"Rentabilidade\"\n                                decimalsLimit={3}\n                                suffix=\"%\"\n                                maxLength={5}\n                                value={rentabilidade}\n                                onChange={(e) => setRentabilidade(e.target.value.replace('%', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <FormLabel className=\"vencimento\"> Vencimento\n                        <Form.Group id=\"vencimento\" className=\"mb-4\">\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    placeholder=\"Vencimento\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={vencimento}\n                                    onChange={(data) => setVencimento(data)}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                    </FormLabel>\n                    <Form.Group id=\"liquidez\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                autoFocus\n                                placeholder=\"Liquidez\"\n                                name=\"liquidez\"\n                                decimalsLimit={0}\n                                prefix=\"D+\"\n                                maxLength={3}\n                                defaultValue={liquidez}\n                                value={liquidez}\n                                onChange={(e) => setLiquidez(e.target.value.replace('D+', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">R$ {(1 * valorInvestido).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Col, Form, FormLabel, FormSelect, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from 'react-currency-input-field';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset}) => {\n\n    // if asset the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const tipoAplicacoes = [\n        {name: 'Selecione a Aplicação', value: ''},\n        {name: 'PRÉ', value: 'pre'},\n        {name: 'CDI', value: 'cdi'},\n        {name: 'CDI+', value: 'cdi+'},\n        {name: 'IPCA+', value: 'ipca+'},\n        {name: 'SELIC', value: 'selic'},\n        {name: 'SELIC+', value: 'selic+'},\n        {name: 'IGPM+', value: 'igpm+'},\n        {name: 'IGPDI+', value: 'igpdi+'}\n    ]\n\n    const [nome, setNome] = useState(asset);\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [valorInvestido, setValorInvestido] = useState('');\n    const [tipoAplicacao, setTipoAplicacao] = useState('');\n    const [rentabilidade, setRentabilidade] = useState('')\n    const [vencimento, setVencimento] = useState();\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('')\n    const [message, setMessage] = useState('');\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('TesouroDiretoForm.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/tesouro/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        data_operacao: dataStrf(dataOperacao),\n                        valor_investido: valorInvestido,\n                        tipo_aplicacao: tipoAplicacao,\n                        rentabilidade: rentabilidade,\n                        vencimento: dataStrf(vencimento),\n                        taxa: taxa,\n                        carteira: carteira[0].id\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Ativo cadastrado com sucesso!</p>);\n                // clean fields\n                setNome('')\n                setDataOperacao(new Date())\n                setValorInvestido('')\n                setTipoAplicacao('')\n                setRentabilidade('')\n                setVencimento(new Date())\n                setTaxa('')\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"nome\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"Nome do Título\"\n                                name=\"nome\"\n                                value={nome}\n                                onChange={(e) => setNome(e.target.value)}\n                                 hidden={nomeHide}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"valor_investido\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"valorInvestido\"\n                                defaultValue={valorInvestido}\n                                placeholder=\"Valor Investido\"\n                                decimalsLimit={2}\n                                prefix=\"R$\"\n                                value={valorInvestido}\n                                onChange={(e) => setValorInvestido(e.target.value.replace('R$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"tipo_aplicacao\" className=\"mb-4\">\n                        <InputGroup>\n                            <FormSelect\n                                autoFocus\n                                required\n                                name=\"tipo_aplicacao\"\n                                placeholder=\"Tipo de Aplicação\"\n                                value={tipoAplicacao}\n                                onChange={(e) => setTipoAplicacao(e.target.value)}\n                            >\n                                {tipoAplicacoes.map(tipo =>\n                                    <option className=\"fw-bold\" key={tipo.value} value={tipo.value}>\n                                        {tipo.name}\n                                    </option>\n                                )}\n                            </FormSelect>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"rentabilidade\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"rentabilidade\"\n                                defaultValue={rentabilidade}\n                                placeholder=\"Rentabilidade\"\n                                decimalsLimit={3}\n                                suffix=\"%\"\n                                maxLength={5}\n                                value={rentabilidade}\n                                onChange={(e) => setRentabilidade(e.target.value.replace('%', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <FormLabel className=\"vencimento\"> Vencimento\n                        <Form.Group id=\"vencimento\" className=\"mb-4\">\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    placeholder=\"Vencimento\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={vencimento}\n                                    onChange={(data) => setVencimento(data)}\n                                />\n                            </InputGroup>\n                        </Form.Group>\n                    </FormLabel>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">R$ {(1 * valorInvestido).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Col, Form, FormLabel, FormSelect, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from 'react-currency-input-field';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset, venda=false}) => {\n\n    // if asset the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const [nome, setNome] = useState(asset);\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [cotacao, setCotacao] = useState('');\n    const [unidades, setUnidades] = useState('');\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('')\n    const [message, setMessage] = useState('');\n    const [listaAtivos, setListaAtivos] = useState([]);\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('CriptomoedaForm.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    // get cripto from binance\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/cripto/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setListaAtivos(data))\n            .catch(err => {\n                console.log('CriptomoedaForm.js', err)\n            })\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/criptomoeda/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        data_operacao: dataStrf(dataOperacao),\n                        cotacao: cotacao,\n                        unidades: unidades,\n                        taxa: taxa,\n                        carteira: carteira[0].id,\n                        venda: venda\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">\n                    {venda ? 'Venda realizada com sucesso' : 'Ativo cadastrado com sucesso!'}\n                </p>);\n                // clean fields\n                setNome('')\n                setDataOperacao(new Date())\n                setCotacao('')\n                setUnidades('')\n                setTaxa('')\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.detail}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"nome\" className=\"mb-4\">\n                         <InputGroup>\n                            <Form.Select\n                                autoFocus\n                                required\n                                type=\"text\"\n                                name=\"nome\"\n                                value={nome}\n                                onChange={(e) => setNome(e.target.value)}\n                                hidden={nomeHide}\n                            >\n                                <option className=\"fw-bold\" key=\"\" value=\"\">\n                                    Ticker do ativo\n                                </option>\n                                {listaAtivos.map(ativo =>\n                                    <option className=\"fw-bold\" value={ativo.id}>\n                                        {ativo.nome}\n                                    </option>\n                                )}\n                            </Form.Select>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"data_operacao\" className=\"mb-4\">\n                        <FormLabel className=\"data_operacao\"> Data da Operação\n                            <InputGroup>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    selected={dataOperacao}\n                                    onChange={(data) => setDataOperacao(data)}\n                                />\n                            </InputGroup>\n                        </FormLabel>\n                    </Form.Group>\n                    <Form.Group id=\"cotacao\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"cotacao\"\n                                defaultValue={cotacao}\n                                placeholder=\"Cotação\"\n                                decimalsLimit={2}\n                                prefix=\"R$\"\n                                onChange={(e) => setCotacao(e.target.value.replace('R$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"unidades\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"number\"\n                                placeholder=\"Unidades\"\n                                name=\"unidades\"\n                                value={unidades}\n                                onChange={(e) => setUnidades(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">R$ {(unidades * cotacao).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Button, Col, Form, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport CurrencyInput from 'react-currency-input-field';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default ({asset}) => {\n\n    // if asset the request is Reinvestment, else NewInvestment\n    let nomeHide = !!asset;\n\n    const [nome, setNome] = useState(asset);\n    const [dataOperacao, setDataOperacao] = useState(new Date());\n    const [valorInvestido, setValorInvestido] = useState('');\n    const [tipoAplicacao, setTipoAplicacao] = useState('');\n    const [taxa, setTaxa] = useState('');\n    const [carteira, setCarteira] = useState('')\n    const [message, setMessage] = useState('');\n\n    // get carteira id\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/assets/carteira/', {\n                headers: {\n                    'Authorization': `JWT ${localStorage.getItem('access')}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setCarteira(data))\n                .catch(err => {\n                    console.log('PropriedadeForm.js', err)\n                })\n        }\n        loadData()\n    }, [])\n\n    let dataStrf = (date) => {\n        return date.toLocaleDateString('pt-br')\n    }\n\n    let handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            let res = await fetch('http://localhost:8000/assets/propriedade/',\n                {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        nome: nome,\n                        data_operacao: dataStrf(dataOperacao),\n                        valor_investido: valorInvestido,\n                        tipo_aplicacao: tipoAplicacao,\n                        taxa: taxa,\n                        carteira: carteira[0].id\n                    })\n                })\n            if (res.status === 200) {\n                setMessage(<p className=\"text-success text-center\">Ativo cadastrado com sucesso!</p>);\n                // clean fields\n                setNome('')\n                setDataOperacao(new Date())\n                setValorInvestido('')\n                setTipoAplicacao('')\n                setTaxa('')\n            } else {\n                setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${res.statusText}</p>)\n            }\n        } catch (err) {\n            setMessage(<p className=\"text-danger text-center\">Um erro ocorreu: ${err.message}</p>)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className=\"ps-5 pe-5 align-items-center\">\n                <Form className=\"mt-4\" onSubmit={handleSubmit}>\n                    <Form.Group id=\"nome\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                required\n                                type=\"text\"\n                                placeholder=\"Nome do Título\"\n                                name=\"nome\"\n                                value={nome}\n                                onChange={(e) => setNome(e.target.value)}\n                                hidden={nomeHide}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"valor_investido\" className=\"mb-4\">\n                        <InputGroup>\n                            <CurrencyInput\n                                className=\"form-control\"\n                                required\n                                name=\"valorInvestido\"\n                                defaultValue={valorInvestido}\n                                placeholder=\"Valor Investido\"\n                                decimalsLimit={2}\n                                prefix=\"R$\"\n                                value={valorInvestido}\n                                onChange={(e) => setValorInvestido(e.target.value.replace('R$', '').replaceAll(',', ''))}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group id=\"taxa\" className=\"mb-4\">\n                        <InputGroup>\n                            <Form.Control\n                                autoFocus\n                                type=\"text\"\n                                placeholder=\"Taxas (opcional)\"\n                                name=\"taxa\"\n                                value={taxa}\n                                onChange={(e) => setTaxa(e.target.value)}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <div className=\"message pt-1 pb-2 text-center\">Seu investimento está sendo de</div>\n                    <div className=\"text-center h3 pb-3\">R$ {(1 * valorInvestido).toFixed(2)}</div>\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                        Concluir\n                    </Button>\n                    <div className=\"message pt-2\">{message ? <>{message}</> : null}</div>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Col, Container, Row, FormSelect} from \"@themesberg/react-bootstrap\";\nimport AcaoFiiForm from \"./forms/AcaoFiiForm\";\nimport AcaoAmForm from \"./forms/AcaoAmForm\";\nimport RendaFixaForm from \"./forms/RendaFixaForm\";\nimport TesouroDiretoForm from \"./forms/TesouroDiretoForm\";\nimport CriptomoedaForm from \"./forms/CriptomoedaForm\";\nimport PropriedadeForm from \"./forms/PropriedadeForm\"\n\nexport default () => {\n\n    const categorias = [\n        {name: 'Ações ou FIIs', value: 'AF'},\n        {name: 'Ações Americanas', value: 'AM'},\n        {name: 'Renda Fixa', value: 'RF'},\n        {name: 'Tesouro Direto', value: 'TD'},\n        {name: 'Criptomoedas', value: 'CM'},\n        {name: 'Propriedades', value: 'PP'}\n    ]\n\n    const [categoria, setCategoria] = useState('AF')\n    const [acoesFiiVisible, setAcoesFiiVisible] = useState(false);\n    const [acoesAmVisible, setAcoesAmVisible] = useState(false);\n    const [rendaFixaVisible, setRendaFixaVisible] = useState(false);\n    const [tesouroVisible, setTesouroVisible] = useState(false);\n    const [criptoVisible, setCriptoVisible] = useState(false);\n    const [propVisible, setPropVisible] = useState(false);\n\n    useEffect(() => {\n        categoria === 'AF' ? setAcoesFiiVisible(true) : setAcoesFiiVisible(false)\n        categoria === 'AM' ? setAcoesAmVisible(true) : setAcoesAmVisible(false)\n        categoria === 'RF' ? setRendaFixaVisible(true) : setRendaFixaVisible(false)\n        categoria === 'TD' ? setTesouroVisible(true) : setTesouroVisible(false)\n        categoria === 'CM' ? setCriptoVisible(true) : setCriptoVisible(false)\n        categoria === 'PP' ? setPropVisible(true) : setPropVisible(false)\n    }, [categoria])\n\n    const handleOnChange = (e) => {\n        setCategoria(e.target.value);\n    };\n\n    return (\n        <main>\n            <section className=\"bg-soft d-flex align-items-center my-4\">\n                <Container className=\"h-auto\">\n                    <Row className=\"justify-content-center\">\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border border-light rounded p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    <h3 className=\"mb-3\">Novo Investimento</h3>\n                                </div>\n                                <span className=\"tooltiptext\">Escolha a categoria:</span>\n                                <FormSelect onChange={handleOnChange}>\n                                    {categorias.map(categoria =>\n                                        <option className=\"fw-bold\" key={categoria.value} value={categoria.value}>\n                                            {categoria.name}\n                                        </option>\n                                    )}\n                                </FormSelect>\n                                {\n                                    acoesFiiVisible ? <AcaoFiiForm asset=''/> :\n                                        acoesAmVisible ? <AcaoAmForm asset=''/> :\n                                            rendaFixaVisible ? <RendaFixaForm asset=''/> :\n                                                tesouroVisible ? <TesouroDiretoForm asset=''/> :\n                                                    criptoVisible ? <CriptomoedaForm asset=''/> :\n                                                        propVisible ? <PropriedadeForm asset=''/> :\n                                                            null\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Col, Container, Form, FormSelect, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport AcaoFiiForm from \"./forms/AcaoFiiForm\";\nimport AcaoAmForm from \"./forms/AcaoAmForm\";\nimport RendaFixaForm from \"./forms/RendaFixaForm\";\nimport TesouroDiretoForm from \"./forms/TesouroDiretoForm\";\nimport CriptomoedaForm from \"./forms/CriptomoedaForm\";\nimport PropriedadeForm from \"./forms/PropriedadeForm\";\n\nexport default () => {\n    // parsing response assets\n    const [responseAtivos, setResponseAtivos] = useState([]);\n    const [selectedAsset, setSelectedAsset] = useState('');\n    const assetType = selectedAsset.split(';')[0];\n    const assetName = selectedAsset.split(';')[1];\n    const assetId = selectedAsset.split(';')[2];\n\n    // variables of statement for turn on or off forms\n    const [acoesFiiVisible, setAcoesFiiVisible] = useState(false);\n    const [acoesAmVisible, setAcoesAmVisible] = useState(false);\n    const [rendaFixaVisible, setRendaFixaVisible] = useState(false);\n    const [tesouroVisible, setTesouroVisible] = useState(false);\n    const [criptoVisible, setCriptoVisible] = useState(false);\n    const [propVisible, setPropVisible] = useState(false);\n\n    // turn on or off forms\n    useEffect(() => {\n        assetType === 'AcaoFii' ? setAcoesFiiVisible(true) : setAcoesFiiVisible(false);\n        assetType === 'AcaoAmericana' ? setAcoesAmVisible(true) : setAcoesAmVisible(false);\n        assetType === 'RendaFixa' ? setRendaFixaVisible(true) : setRendaFixaVisible(false);\n        assetType === 'TesouroDireto' ? setTesouroVisible(true) : setTesouroVisible(false);\n        assetType === 'Criptomoeda' ? setCriptoVisible(true) : setCriptoVisible(false);\n        assetType === 'Propriedade' ? setPropVisible(true) : setPropVisible(false);\n    }, [assetType]);\n\n    // get assets by user\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setResponseAtivos(data))\n            .catch(err => {\n                console.log('Reinvestment.js', err)\n            })\n        loadData()\n    }, [])\n\n    return (\n        <main>\n            <section className=\"bg-soft d-flex align-items-center my-4\">\n                <Container className=\"h-auto justify-content-center\">\n                    <Row className=\"justify-content-center\">\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border border-light\n                                rounded p-4 p-lg-5 w-100 fmxw-500 text-md-center\">\n                                <Form className=\"mt-4\">\n                                    <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                        <h3 className=\"mb-3\">Reinvestimento</h3>\n                                    </div>\n                                    <span className=\"tooltiptext\">Escolha o ativo:</span>\n                                    <Form.Group id=\"tipo_aplicacao\" className=\"mb-4\">\n                                        <InputGroup>\n                                            <FormSelect\n                                                autoFocus\n                                                required\n                                                name=\"tipo_aplicacao\"\n                                                placeholder=\"Tipo de Aplicação\"\n                                                value={selectedAsset}\n                                                onChange={(e) => setSelectedAsset(e.target.value)}\n                                            >\n                                                <option className=\"fw-bold\" key=\"\" value=\"0\">\n                                                    --------------\n                                                </option>\n                                                {responseAtivos.map(ativo =>\n                                                    <option className=\"fw-bold\" value={ativo.type + ';' + ativo.name + ';' + ativo.id}>\n                                                        {ativo.name}\n                                                    </option>\n                                                )}\n                                            </FormSelect>\n                                        </InputGroup>\n                                    </Form.Group>\n                                </Form>\n                                {\n                                    acoesFiiVisible ? <AcaoFiiForm asset={assetId}/> :\n                                        acoesAmVisible ? <AcaoAmForm asset={assetId}/> :\n                                            rendaFixaVisible ? <RendaFixaForm asset={assetName}/> :\n                                                tesouroVisible ? <TesouroDiretoForm asset={assetName}/> :\n                                                    criptoVisible ? <CriptomoedaForm asset={assetId}/> :\n                                                        propVisible ? <PropriedadeForm asset={assetName}/> :\n                                                            null\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Col, Container, Form, FormSelect, InputGroup, Row} from \"@themesberg/react-bootstrap\";\nimport AcaoFiiForm from \"./forms/AcaoFiiForm\";\nimport AcaoAmForm from \"./forms/AcaoAmForm\";\nimport RendaFixaForm from \"./forms/RendaFixaForm\";\nimport TesouroDiretoForm from \"./forms/TesouroDiretoForm\";\nimport CriptomoedaForm from \"./forms/CriptomoedaForm\";\nimport PropriedadeForm from \"./forms/PropriedadeForm\";\n\nexport default () => {\n    // parsing response assets\n    const [responseAtivos, setResponseAtivos] = useState([]);\n    const [selectedAsset, setSelectedAsset] = useState('');\n    const assetType = selectedAsset.split(';')[0];\n    const assetName = selectedAsset.split(';')[1];\n    const assetId = selectedAsset.split(';')[2];\n\n    // variables of statement for turn on or off forms\n    const [acoesFiiVisible, setAcoesFiiVisible] = useState(false);\n    const [acoesAmVisible, setAcoesAmVisible] = useState(false);\n    const [rendaFixaVisible, setRendaFixaVisible] = useState(false);\n    const [tesouroVisible, setTesouroVisible] = useState(false);\n    const [criptoVisible, setCriptoVisible] = useState(false);\n    const [propVisible, setPropVisible] = useState(false);\n\n    // turn on or off forms\n    useEffect(() => {\n        assetType === 'AcaoFii' ? setAcoesFiiVisible(true) : setAcoesFiiVisible(false);\n        assetType === 'AcaoAmericana' ? setAcoesAmVisible(true) : setAcoesAmVisible(false);\n        assetType === 'RendaFixa' ? setRendaFixaVisible(true) : setRendaFixaVisible(false);\n        assetType === 'TesouroDireto' ? setTesouroVisible(true) : setTesouroVisible(false);\n        assetType === 'Criptomoeda' ? setCriptoVisible(true) : setCriptoVisible(false);\n        assetType === 'Propriedade' ? setPropVisible(true) : setPropVisible(false);\n    }, [assetType]);\n\n    // get assets by user\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setResponseAtivos(data))\n            .catch(err => {\n                console.log('Sale.js', err)\n            })\n        loadData()\n    }, [])\n\n    return (\n        <main>\n            <section className=\"bg-soft d-flex align-items-center my-4\">\n                <Container className=\"h-auto justify-content-center\">\n                    <Row className=\"justify-content-center\">\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft border border-light\n                                rounded p-4 p-lg-5 w-100 fmxw-500 text-md-center\">\n                                <Form className=\"mt-4\">\n                                    <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                        <h3 className=\"mb-3\">Nova Venda</h3>\n                                    </div>\n                                    <span className=\"tooltiptext\">Escolha o ativo:</span>\n                                    <Form.Group id=\"tipo_aplicacao\" className=\"mb-4\">\n                                        <InputGroup>\n                                            <FormSelect\n                                                autoFocus\n                                                required\n                                                name=\"tipo_aplicacao\"\n                                                placeholder=\"Tipo de Aplicação\"\n                                                value={selectedAsset}\n                                                onChange={(e) => setSelectedAsset(e.target.value)}\n                                            >\n                                                <option className=\"fw-bold\" key=\"\" value=\"0\">\n                                                    --------------\n                                                </option>\n                                                {responseAtivos.map(ativo =>\n                                                    <option className=\"fw-bold\"\n                                                            value={ativo.type + ';' + ativo.name + ';' + ativo.id}>\n                                                        {ativo.name}\n                                                    </option>\n                                                )}\n                                            </FormSelect>\n                                        </InputGroup>\n                                    </Form.Group>\n                                </Form>\n                                {\n                                    acoesFiiVisible ? <AcaoFiiForm asset={assetId} venda={true}/> :\n                                        acoesAmVisible ? <AcaoAmForm asset={assetId} venda={true}/> :\n                                            rendaFixaVisible ? <RendaFixaForm asset={assetName}/> :\n                                                tesouroVisible ? <TesouroDiretoForm asset={assetName}/> :\n                                                    criptoVisible ? <CriptomoedaForm asset={assetId} venda={true}/> :\n                                                        propVisible ? <PropriedadeForm asset={assetName}/> :\n                                                            null\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    )\n}","import {Card, Table} from \"@themesberg/react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\n\nexport default () => {\n\n    const [dataResponse, setDataResponse] = useState([])\n    console.log(dataResponse)\n    // get transactions list\n    useEffect(() => {\n        const loadData = () => {\n        }\n        fetch('http://localhost:8000/assets/list/', {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`\n            }\n        })\n            .then(response => response.json())\n            .then(data => setDataResponse(data))\n            .catch(err => {\n                console.log('data.js', err)\n            })\n        loadData()\n    }, [])\n\n    const TableRow = (props) => {\n        const {name, pm, units, total_current, invested, performance, perc_wallet, type} = props;\n        const perfVariant = performance > 0 ? \"success\" : \"danger\"\n\n        return (\n            <tr>\n                <td>\n          <span className=\"fw-normal\">\n            {name}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {pm !== '0.00' ? <>R${parseFloat(pm).toFixed(2)}</> : <>N/A</>}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {units}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            R${invested}\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            R${total_current}\n          </span>\n                </td>\n                <td>\n          <span className={`fw-normal text-${perfVariant}`}>\n            {performance}%\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {perc_wallet}%\n          </span>\n                </td>\n                <td>\n          <span className=\"fw-normal\">\n            {type}\n          </span>\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\n            <Card.Body className=\"pt-0\">\n                <Table hover className=\"user-table align-items-center\">\n                    <thead>\n                    <tr>\n                        <th className=\"border-bottom\">Ativo</th>\n                        <th className=\"border-bottom\">Preço Médio</th>\n                        <th className=\"border-bottom\">Unidades</th>\n                        <th className=\"border-bottom\">Total Investido</th>\n                        <th className=\"border-bottom\">Total Atual</th>\n                        <th className=\"border-bottom\">Valorização</th>\n                        <th className=\"border-bottom\">% na Carteira</th>\n                        <th className=\"border-bottom\">Tipo</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {dataResponse.map(d => <TableRow key={`data-${d.id}`} {...d} />)}\n                    </tbody>\n                </Table>\n                <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-end\">\n                    <small className=\"fw-bold\">\n                        Mostrando <b>{dataResponse.length}</b> resultados\n                    </small>\n                </Card.Footer>\n            </Card.Body>\n        </Card>\n    );\n};","import React from \"react\";\nimport Table from \"./TableAssets\";\n\n\nexport default () => {\n    return (\n        <>\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n                <div className=\"d-block mb-4 mb-md-0\">\n                    <h4>Lista de Ativos</h4>\n                    <p className=\"mb-0\">Consulte os detalhes dos seus ativos</p>\n                </div>\n            </div>\n\n            <div className=\"table-settings mb-4\">\n                <Table/>\n            </div>\n        </>\n    );\n};\n","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {Routes} from \"./routes\";\nimport {Provider} from \"react-redux\";\nimport store from './store'\n\n// pages\nimport DashboardOverview from \"./pages/sidebar/dashboard/DashboardOverview\";\nimport Transactions from \"./pages/sidebar/transactions/Transactions\";\nimport Settings from \"./pages/Settings\";\nimport Signin from \"./pages/authentication/Signin\";\nimport Signup from \"./pages/authentication/Signup\";\nimport ResetPasswordConfirm from \"./pages/authentication/ResetPasswordConfirm\";\nimport ResetPassword from \"./pages/authentication/ResetPassword\";\nimport NotFoundPage from \"./pages/authentication/NotFound\";\nimport Activate from \"./pages/authentication/Activate\"\nimport Google from \"./pages/authentication/Google\";\n\n// components\nimport Sidebar from \"./pages/sidebar/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Preloader from \"./components/Preloader\";\nimport AddTransaction from \"./pages/sidebar/addAssets/AddTransaction\";\nimport NewInvestment from \"./pages/sidebar/addAssets/NewInvestment\";\nimport ReInvestment from \"./pages/sidebar/addAssets/ReInvestment\";\nimport Sale from \"./pages/sidebar/addAssets/Sale\";\nimport AssetsList from \"./pages/sidebar/listAssets/AssetsList\";\n\n\nconst RouteWithLoader = ({component: Component, ...rest}) => {\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const timer = setTimeout(() => setLoaded(true), 1000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    return (\n        <Route {...rest} render={props => (<> <Preloader show={loaded ? false : true}/> <Component {...props} /> </>)}/>\n    );\n};\n\n\nconst RouteWithSidebar = ({component: Component, ...rest}) => {\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        const timer = setTimeout(() => setLoaded(true), 1000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    const localStorageIsSettingsVisible = () => {\n        return localStorage.getItem('settingsVisible') === 'false' ? false : true\n    }\n\n    const [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\n\n    const toggleSettings = () => {\n        setShowSettings(!showSettings);\n        localStorage.setItem('settingsVisible', !showSettings);\n    }\n\n    return (\n        <Route {...rest} render={props => (\n            localStorage.getItem('access') ? (\n                <>\n                    <Preloader show={!loaded}/>\n                    <Sidebar/>\n\n                    <main className=\"content\">\n                        <Navbar/>\n                        <Component {...props} />\n                        <Footer toggleSettings={toggleSettings} showSettings={showSettings}/>\n                    </main>\n                </>\n            ) : <Redirect to={{pathname: Routes.Signin.path, state: {from: props.location}}}/>\n\n        )}\n        />\n    );\n};\n\nconst App = () => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n\n                {/*if authenticated*/}\n                <RouteWithSidebar exact path={Routes.DashboardOverview.path} component={DashboardOverview}/>\n                <RouteWithSidebar exact path={Routes.AssetsList.path} component={AssetsList}/>\n                <RouteWithSidebar exact path={Routes.Settings.path} component={Settings}/>\n                <RouteWithSidebar exact path={Routes.Transactions.path} component={Transactions}/>\n                <RouteWithSidebar exact path={Routes.AddTransaction.path} component={AddTransaction}/>\n                <RouteWithSidebar exact path={Routes.NewInvestment.path} component={NewInvestment}/>\n                <RouteWithSidebar exact path={Routes.Sale.path} component={Sale}/>\n                <RouteWithSidebar exact path={Routes.ReInvestment.path} component={ReInvestment}/>\n\n                {/*auth*/}\n                <RouteWithLoader exact path={Routes.Signin.path} component={Signin}/>\n                <RouteWithLoader exact path={Routes.Signup.path} component={Signup}/>\n                <RouteWithLoader exact path={Routes.Activate.path} component={Activate}/>\n                <RouteWithLoader exact path={Routes.Google.path} component={Google}/>\n                <RouteWithLoader exact path={Routes.ResetPasswordConfirm.path} component={ResetPasswordConfirm}/>\n                <RouteWithLoader exact path={Routes.ResetPassword.path} component={ResetPassword}/>\n\n                {/*other*/}\n                <RouteWithLoader exact path={Routes.NotFound.path} component={NotFoundPage}/>\n                <Redirect to={Routes.NotFound.path}/>\n            </Switch>\n        </BrowserRouter>\n    </Provider>\n)\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// core styles\nimport \"./scss/volt.scss\";\n\n// vendor styles\nimport \"react-datetime/css/react-datetime.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/signin.58ee1d5a.svg\";"],"sourceRoot":""}